{"version":3,"sources":["reportWebVitals.ts","store/alarmReducer.tsx","store/ticketReducer.tsx","store/index.tsx","index.tsx","App.tsx","pages/Login.tsx","pages/PresentReserve.tsx","pages/Alarm.tsx","pages/Cinema/movie/MovieList.tsx","pages/Cinema/reservation/Progress.tsx","pages/Cinema/reservation/SlidingTabs.tsx","pages/Cinema/reservation/TimeTag.tsx","pages/Cinema/reservation/StepOne.tsx","pages/Cinema/reservation/SeatTag.tsx","pages/Cinema/reservation/StepTwo.tsx","pages/Cinema/reservation/StepThree.tsx","pages/Cinema/reservation/SideCard.tsx","pages/Cinema/reservation/Reservation.tsx","pages/Cinema/Cinema.tsx","pages/Community/review/CommentRate.tsx","pages/Community/review/WriteComment.tsx","pages/Community/review/Comments.tsx","pages/Community/review/Review.tsx","pages/Community/board/ShowTableContent.tsx","pages/Community/board/Board.tsx","pages/Community/Community.tsx","pages/MyPage/info/MyInfo.tsx","pages/MyPage/info/Point.tsx","pages/MyPage/info/EditInfo.tsx","pages/MyPage/history/PastTicket.tsx","pages/MyPage/history/ReserveHistory.tsx","pages/MyPage/MyPage.tsx","common/api.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","alarmList","index","title","content","alarm","state","action","type","newIdx","length","data","undefined","idx","temp","filter","item","myTicket","reserveNo","place","room","seatRow","seatCol","date","time","price","ticket","combineReducers","alarmData","ticketData","store","createStore","rootReducers","ReactDOM","render","StrictMode","App","document","getElementById","Header","Layout","Content","Footer","useState","menuItemKey","setMenuItemKey","useSelector","dropDownMenu","onClick","e","key","Item","icon","global","localStorage","getItem","removeItem","style","fontFamily","className","span","offset","theme","mode","defaultSelectedKeys","overlay","trigger","count","shape","ghost","borderColor","showOnlineTicket","reserveOnClick","Title","Typography","Login","props","useEffect","console","log","Fragment","justify","marginTop","fontSize","name","labelCol","wrapperCol","initialValues","remember","onFinish","values","username","password","setItem","onFinishFailed","errorInfo","autoComplete","label","rules","required","message","Password","valuePropName","htmlType","width","height","info","Text","PresentReserve","color","background","preview","alt","src","process","subTitle","description","Alarm","dispatch","useDispatch","align","level","marginBottom","bordered","dataSource","renderItem","Meta","Link","IconText","text","createElement","MovieList","ranking","setRanking","getMovieList","res","gutter","map","hoverable","extra","href","cover","actions","StarOutlined","Math","floor","random","LikeOutlined","MessageOutlined","bookRate","releaseDate","Step","Steps","Progress","steps","step","current","ProgressBtn","handleStepChange","loading","setLoading","submit","a","promise","Promise","resolve","reject","setTimeout","warning","success","moment","format","handleSubmitOnClick","finally","disabled","marginLeft","TabPane","Tabs","SlidingTabs","children","handleTabKeyChange","tabPosition","onTabClick","tab","CheckableTag","Tag","notSelectedStyle","TimeTag","selectedTime","handleTagOnClick","checked","onChange","StepOne","titles","setTitles","theaters","setTheaters","times","setTimes","handleTabOnClick","getTheaters","getTimes","timesEachRoom","order","i","selectedStyle","border","SeatTags","row","col","selectedSeat","StepTwo","seat","textAlign","String","fromCharCode","Option","Select","StepThree","Form","useForm","form","pointOrign","setPoint","usePoint","setUsePoint","orientation","layout","Group","compact","placeholder","value","max","formatter","replace","paddingTop","mark","SideCard","textStyle","fontWeight","dashed","Reservation","stepValue","setStepValue","direction","bigFont","Cinema","selectedKeys","VideoCameraFilled","CalendarOutlined","CommentRate","tooltips","setRate","rate","TextArea","Input","Editor","onSubmit","submitting","rows","WriteComment","addComment","setSubmitting","setValue","profileIdx","movies","setMovies","defaultValue","avatar","target","writer","movieKey","like","dislike","Comments","likes","setLikes","dislikes","setDislikes","setAction","LikeFilled","React","DislikeFilled","DislikeOutlined","hidden","danger","author","movie","CommentList","comments","header","itemLayout","Review","list","setList","getComments","newComment","concat","DOMParser","ShowTableContent","rowData","viewCount","visible","onClose","menu","onCancel","footer","placement","EyeOutlined","replaceAll","Board","setData","isModalVisible","setIsModalVisible","setRowData","tableRowOnClick","record","getBoardData","columns","dataIndex","onRow","rowIndex","event","pagination","position","Community","CoffeeOutlined","MyInfo","Point","EditInfo","Panel","Collapse","PastTicket","expandIconPosition","ReserveHistory","tickets","setTickets","getTicketHistory","MyPage","HistoryOutlined","axios","get","response","theater","push","boardData","forEach","element"],"mappings":"yJAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCPRQ,EAAsB,CAC1B,CACEC,MAAO,EACPC,MAAO,eACPC,QAAS,iFAEX,CACEF,MAAO,EACPC,MAAO,2BACPC,QAAS,oEAoBEC,EAhBD,WAAgC,IAA/BC,EAA8B,uDAAtBL,EAAWM,EAAW,uCAC3C,GAAoB,aAAhBA,EAAOC,KAAqB,CAC9B,IAAMC,EAA0B,IAAjBH,EAAMI,OAAe,EAAIJ,EAAMA,EAAMI,OAAS,GAAGR,MAAQ,EACxE,MAAM,GAAN,mBAAWI,GAAX,cAAoBJ,MAAOO,GAAWF,EAAOI,QACxC,GAAoB,gBAAhBJ,EAAOC,KAAwB,CACxC,QAAmBI,IAAfL,EAAOM,IACT,MAAO,GAEP,IAAMC,EAAOR,EAAMS,QAAO,SAACC,GAAD,OAAUA,EAAKd,QAAUK,EAAOM,OAC1D,OAAOC,EAGT,OAAOR,GCzBLW,EAAoB,CACxBC,UAAW,GACXf,MAAO,GACPgB,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,QAAS,EACTC,KAAM,GACNC,KAAM,GACNC,MAAO,KAWMC,EARA,WAA+B,IAA9BpB,EAA6B,uDAArBW,EAAUV,EAAW,uCAC3C,MAAoB,cAAhBA,EAAOC,KACFD,EAAOI,KAEPL,GCdIqB,cAAgB,CAC7BC,UAAWvB,EACXwB,WAAYH,I,eCIRI,EAAQC,YAAYC,GAE1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAACM,EAAA,EAAD,QAGJC,SAASC,eAAe,SAM1B9C,K,oOCVQ+C,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAiHVN,IA/GH,WACV,MAAsCO,mBAAiB,UAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAEM5C,EAAsB6C,aAC1B,SAACxC,GAAD,OAAwBA,EAAMsB,aAsB1BmB,EACJ,eAAC,IAAD,CAAMC,QAhBsB,SAACC,GAC7BJ,EAAeI,EAAEC,MAejB,UACE,cAAC,IAAKC,KAAN,CAAuBC,KAAM,cAAC,eAAD,IAA7B,SACGC,EAAOC,aAAaC,QAAQ,YAC3B,sBAAMP,QAfc,WAC1BK,EAAOC,aAAaE,WAAW,YAC/BH,EAAOC,aAAaE,WAAW,YAE/BX,EAAe,WAWT,sCAEA,sBAAMG,QAVa,WACzBH,EAAe,UAST,iCAJW,SAOf,cAAC,IAAKM,KAAN,CAAgCC,KAAM,cAAC,eAAD,IAAtC,qCAAe,qBAMnB,OACE,eAAC,IAAD,CAAQK,MAAO,CAAEC,WAAY,eAA7B,UACE,cAAC,IAAD,UACE,eAACnB,EAAD,WACE,qBAAKoB,UAAU,SACf,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAM,GAAIC,OAAQ,EAAvB,SACE,eAAC,IAAD,CACEC,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAACpB,GACtBI,QA7CgB,SAACC,GAC7BJ,EAAeI,EAAEC,MAwCP,UAME,cAAC,IAAKC,KAAN,gCAAgB,UAChB,cAAC,IAAKA,KAAN,sCAAgB,aAChB,cAAC,IAAKA,KAAN,iCAAgB,eAGpB,cAAC,IAAD,CAAKS,KAAM,EAAGC,OAAQ,EAAtB,SACE,cAAC,IAAD,CACEI,QAAS,cAAC,IAAD,CAAOhE,UAAWA,IAC3BiE,QAAS,CAAC,SAFZ,SAIE,cAAC,IAAD,CAAOC,MAAOlE,EAAUS,OAAxB,SACE,cAAC,IAAD,CACE0C,KAAM,cAAC,eAAD,CAAcO,UAAU,sBAC9BS,MAAM,SACNC,OAAK,EACLZ,MAAO,CAAEa,YAAa,uBAK9B,cAAC,IAAD,CAAKV,KAAM,EAAX,SACE,cAAC,IAAD,CAAUK,QAASlB,EAAcmB,QAAS,CAAC,SAA3C,SACE,cAAC,IAAD,CACEd,KAAM,cAAC,eAAD,CAAcO,UAAU,sBAC9BS,MAAM,SACNC,OAAK,EACLZ,MAAO,CAAEa,YAAa,6BAOlC,cAAC7B,EAAD,CAASkB,UAAU,iBAAnB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAKC,KAAM,GAAIC,OAAQ,EAAvB,UACmB,WAAhBjB,GACC,cAAC,IAAD,CACE2B,iBAAkB,kBAAM1B,EAAe,qBAG1B,cAAhBD,GAA+B,cAAC,IAAD,IACf,WAAhBA,GAA4B,cAAC,IAAD,IACZ,UAAhBA,GACC,cAAC,IAAD,CAAOC,eAAgBA,IAER,mBAAhBD,GACC,cAAC,IAAD,CAAgB4B,eAAgB,kBAAM3B,EAAe,oBAK7D,cAACH,EAAD,CAAQiB,UAAU,gBAAlB,wC,qDC1HN,oGAGQc,EAAUC,IAAVD,MAsFOE,IApFD,SAACC,GACb,IAAQ/B,EAAmB+B,EAAnB/B,eAqBR,OAJAgC,qBAAU,WACRC,QAAQC,IAJ2C,SAA5C1B,EAAOC,aAAaC,QAAQ,eAKlC,IAGD,eAAC,IAAMyB,SAAP,WACE,cAAC,IAAD,CAAKC,QAAQ,SAAb,SACE,cAACR,EAAD,CAAOhB,MAAO,CAAEyB,UAAW,MAAOC,SAAU,QAA5C,0BAEF,eAAC,IAAD,CACEC,KAAK,QACLC,SAAU,CAAEzB,KAAM,GAClB0B,WAAY,CAAE1B,KAAM,GACpB2B,cAAe,CAAEC,UAAU,GAC3BC,SA7BW,SAACC,GAChB,IAAQC,EAAiCD,EAAjCC,SAAoBH,GAAaE,EAAvBE,SAAuBF,EAAbF,UAC5BnC,EAAOC,aAAauC,QAAQ,WAAYF,GACxCtC,EAAOC,aAAauC,QAAQ,WAAYL,GACxC3C,EAAe,WA0BXiD,eAvBiB,SAACC,GACtBjB,QAAQC,IAAI,UAAWgB,IAuBnBC,aAAa,MAPf,UASE,cAAC,IAAK7C,KAAN,CACE8C,MAAM,qBACNb,KAAK,WACLc,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mEAHrC,SAKE,cAAC,IAAD,MAGF,cAAC,IAAKjD,KAAN,CACE8C,MAAM,2BACNb,KAAK,WACLc,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yEAHrC,SAKE,cAAC,IAAMC,SAAP,MAGF,cAAC,IAAKlD,KAAN,CACEiC,KAAK,WACLkB,cAAc,UACdhB,WAAY,CAAEzB,OAAQ,EAAGD,KAAM,IAHjC,SAKE,cAAC,IAAD,4DAGF,eAAC,IAAKT,KAAN,CAAWmC,WAAY,CAAEzB,OAAQ,EAAGD,KAAM,GAA1C,UACE,cAAC,IAAD,CACEpD,KAAK,UACL+F,SAAS,SACT9C,MAAO,CAAE+C,MAAO,OAAQC,OAAQ,IAHlC,gCAOA,cAAC,IAAD,CACEjG,KAAK,OACL+F,SAAS,SACTvD,QAAS,WACPoD,IAAQM,KAAK,8BAEfjD,MAAO,CAAE+C,MAAO,OAAQC,OAAQ,IANlC,kD,oDCzEV,0GAeQE,EAASjC,IAATiC,KA2FOC,IAzFQ,SAAChC,GACtB,IAAQJ,EAAmBI,EAAnBJ,eAGF9C,EAAkBoB,aAAY,SAACxC,GAAD,OAAwBA,EAAMuB,cAE5DzB,EACJ,qCACE,cAAC,IAAD,CAAK6E,QAAQ,SAAb,SACE,cAAC,IAAD,UACE,cAAC0B,EAAD,CAAMlD,MAAO,CAAE0B,SAAU,QAAzB,SAAoCzD,EAAOvB,YAG/C,cAAC,IAAD,CAAK8E,QAAQ,SAAb,SACE,cAAC,IAAD,UACE,eAAC0B,EAAD,CAAMnG,KAAK,YAAX,uCAA8BkB,EAAOR,iBAGzC,cAAC,IAAD,CAAK+D,QAAQ,SAASxB,MAAO,CAAEyB,UAAW,QAA1C,SACE,cAAC,IAAD,UACE,eAACyB,EAAD,CAAMlD,MAAO,CAAE0B,SAAU,QAAzB,UACGzD,EAAOP,MADV,UACmBO,EAAON,YAI9B,cAAC,IAAD,CAAK6D,QAAQ,SAAb,SACE,cAAC,IAAD,UACE,eAAC0B,EAAD,CACElD,MAAO,CACL0B,SAAU,OACV0B,MAAO,YACPC,WAAY,WAJhB,UAOGpF,EAAOL,QAPV,SAOoBK,EAAOJ,eAI/B,cAAC,IAAD,CAAK2D,QAAQ,SAASxB,MAAO,CAAEyB,UAAW,QAA1C,SACE,cAAC,IAAD,UACE,eAACyB,EAAD,CAAMlD,MAAO,CAAE0B,SAAU,QAAzB,uCAA0CzD,EAAOF,KAAjD,WAGJ,cAAC,IAAD,CAAKyD,QAAQ,SAAb,SACE,cAAC,IAAD,UACE,cAAC0B,EAAD,CAAMnG,KAAK,YAAX,0FAGJ,cAAC,IAAD,CAAKyE,QAAQ,SAASxB,MAAO,CAAEyB,UAAW,QAA1C,SACE,cAAC,IAAD,CAAKtB,KAAM,EAAX,SACE,cAAC,IAAD,CACEmD,SAAS,EACTP,MAAO,OACPQ,IAAI,UACJC,IAAKC,qCAOf,OACE,eAAC,IAAMlC,SAAP,WACE,cAAC,IAAD,CAAY7E,MAAM,kCAASgH,SAAS,KAClB,KAAjBzF,EAAOvB,MACN,cAAC,IAAD,CACEiH,YAAa,gHACb3D,MAAO,CAAEyB,UAAW,OAFtB,SAIE,cAAC,IAAD,CACE1E,KAAK,UACLwC,QAAS,WACPwB,KAHJ,qDAUF,cAAC,IAAD,CAAKS,QAAQ,SAAb,SACE,cAAC,IAAD,CAAKtB,UAAU,iBAAf,SACE,cAAC,IAAD,UAAOvD,a,iCClGnB,qGAOQqE,EAAUC,IAAVD,MAmHO4C,IAjHD,SAACzC,GACb,IAAQ3E,EAAc2E,EAAd3E,UAGFqH,GADkBxE,aAAY,SAACxC,GAAD,OAAwBA,EAAMuB,cACjD0F,eAqBjB,OACE,cAAC,IAAD,CAAM5D,UAAU,gBAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,eAAC,IAAD,CAAKqB,QAAQ,gBAAgBuC,MAAM,SAAnC,UACE,cAAC/C,EAAD,CAAOgD,MAAO,EAAG9D,UAAU,cAA3B,0BAGA,cAAC,IAAD,CACEnD,KAAK,OACLwC,QAAS,WACPsE,EAAS,CAAE9G,KAAM,iBAEnBiD,MAAO,CAAEyB,UAAW,GALtB,kDAiCJ,cAAC,IAAD,CAAKtB,KAAM,GAAX,SACE,cAAC,IAAD,CAASH,MAAO,CAAEyB,UAAW,EAAGwC,aAAc,OAEhD,cAAC,IAAD,CAAK9D,KAAM,GAAX,SACE,cAAC,IAAD,CACED,UAAU,qBACVgE,UAAQ,EACRC,WAAY3H,EACZ4H,WAAY,SAAC7G,GAAD,OACV,cAAC,IAAKmC,KAAN,CAAWQ,UAAU,kBAArB,SACE,cAAC,IAAKR,KAAK2E,KAAX,CACE3H,MACE,mCACE,eAAC,IAAD,CAAK8E,QAAQ,SAASuC,MAAM,SAA5B,UACE,eAAC,IAAD,CAAK5D,KAAM,GAAX,UACG5C,EAAKb,MACLa,EAAKd,SAER,cAAC,IAAD,CAAK0D,KAAM,IACX,cAAC,IAAD,CAAKA,KAAM,EAAX,SACE,cAAC,gBAAD,CACEZ,QAAS,kBACPsE,EAAS,CAAE9G,KAAM,cAAeK,IAAKG,EAAKd,kBAOtDkH,YACE,mCACE,eAAC,IAAD,CAAKnC,QAAQ,SAASuC,MAAM,SAA5B,UACE,cAAC,IAAD,CAAK5D,KAAM,GAAX,SAAgB5C,EAAKZ,UACrB,cAAC,IAAD,CAAKwD,KAAM,yB,4NCjG3BmE,EAASrD,IAATqD,KAEFC,EAAW,SAAC,GAAD,IAAG5E,EAAH,EAAGA,KAAM6E,EAAT,EAASA,KAAT,OACf,eAAC,IAAD,WACGC,wBAAc9E,GACd6E,MAkFUE,EA9EG,SAACvD,GACjB,IAAQJ,EAAmBI,EAAnBJ,eACR,EAA8B7B,mBAAuB,IAArD,mBAAOyF,EAAP,KAAgBC,EAAhB,KAQA,OANAxD,qBAAU,WACRyD,cAAe3I,MAAK,SAAC4I,GACnBF,EAAWE,QAEZ,IAGD,eAAC,IAAMvD,SAAP,WACE,cAAC,IAAD,CACE7E,MAAM,QACNgH,SAAS,mCACT1D,MAAO,CAAEiE,aAAc,WAEzB,cAAC,IAAD,CAAKc,OAAQ,CAAC,EAAG,IAAjB,SACGJ,EAAQK,KAAI,SAACzH,EAAkBd,GAAnB,OACX,cAAC,IAAD,CAAK0D,KAAM,EAAX,SACE,cAAC,IAAD,CACE8E,WAAS,EAETvI,MAAOD,EAAQ,EAAI,UACnByI,MACE,cAACZ,EAAD,CACEa,KAAK,IACL5F,QAAS,WACPwB,KAHJ,sCASFf,MAAO,CAAE+C,MAAO,QAChBqC,MACE,qBACE7B,IAAKhG,EAAKb,MACV8G,IACEC,yBAEAlG,EAAKb,MACL,SAIN2I,QAAS,CACP,cAAC,EAAD,CACE1F,KAAM2F,eACNd,KAAMe,KAAKC,MAAsB,IAAhBD,KAAKE,WAClB,YAEN,cAAC,EAAD,CACE9F,KAAM+F,eACNlB,KAAMe,KAAKC,MAAsB,IAAhBD,KAAKE,WAClB,QAEN,cAAC,EAAD,CACE9F,KAAMgG,kBACNnB,KAAMe,KAAKC,MAAsB,GAAhBD,KAAKE,WAClB,UAxCV,SA4CE,cAAC,IAAD,CACE/I,MAAOa,EAAKb,MACZiH,YACE,qBAAQpG,EAAKqI,SAAW,wBAAWrI,EAAKsI,eA7CvCpJ,IAHUA,Y,sFChCrBqJ,EAASC,IAATD,KAEFE,EAAW,SAAC7E,GAChB,IAAQ8E,EAAgB9E,EAAhB8E,MAAOC,EAAS/E,EAAT+E,KAEf,OACE,mCACE,cAAC,IAAD,CAAOC,QAASD,EAAhB,SACGD,EAAMjB,KAAI,SAACzH,GAAD,OACT,cAACuI,EAAD,CAAuBpJ,MAAOa,EAAKb,OAAxBa,EAAKb,eAOpB0J,EAAc,SAACjF,GAMnB,IAAQ8E,EAAoD9E,EAApD8E,MAAOC,EAA6C/E,EAA7C+E,KAAMG,EAAuClF,EAAvCkF,iBAAkBvF,EAAqBK,EAArBL,iBAEvC,EAA8B5B,oBAAkB,GAAhD,mBAAOoH,EAAP,KAAgBC,EAAhB,KAEMtI,EAAkBoB,aAAY,SAACxC,GAAD,OAAwBA,EAAMuB,cAC5DyF,EAAWC,cAEX0C,EAAM,uCAAG,4BAAAC,EAAA,6DACPC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACTF,EAAQjE,IAAQoE,QAAQ,uCACvB,QAEF7K,MAAK,WACJyG,IAAQqE,QAAQ,iCAEjB9K,MAAK,WAEJ,IAAMgB,EAAa,2BACde,GADc,IAEjBR,UAAWwJ,MAASC,OAAO,YAAc,OACzCpJ,KAAMmJ,MAASC,OAAO,2BAExBrD,EAAS,CACP9G,KAAM,YACNG,KAAMA,OAlBC,kBAqBNwJ,GArBM,2CAAH,qDAwBNS,EAAmB,uCAAG,sBAAAV,EAAA,6DAC1BF,GAAW,GADe,SAEpBC,IACHY,SAAQ,WACPb,GAAW,MAEZrK,MAAK,WACJ2H,EAAS,CACP9G,KAAM,WACNG,KAAM,CAAER,MAAO,4BAASC,QAAS,iEAGpCT,MAAK,WACJ4K,YAAW,WACThG,MACC,QAfmB,2CAAH,qDAmBzB,OACE,eAAC,IAAD,CAAKd,MAAO,CAAEyB,UAAW,QAAzB,UACE,cAAC,IAAD,CAAKtB,KAAM,GAAX,SACE,cAAC,IAAD,CACEkH,SAAmB,IAATnB,EACV3G,QAAS,kBAAM8G,EAAiB,SAChCrG,MAAO,CAAEsH,WAAY,MACrBpH,UAAU,mBAJZ,wCASF,eAAC,IAAD,CAAKC,KAAM,GAAIC,OAAQ,EAAvB,UACG8F,EAAOD,EAAMhJ,OAAS,GACrB,cAAC,IAAD,CACEF,KAAK,UACLwC,QAAS,kBAAM8G,EAAiB,SAChCnG,UAAU,mBAHZ,0BAQDgG,IAASD,EAAMhJ,OAAS,GACvB,cAAC,IAAD,CACEF,KAAK,UACLwC,QAAS4H,EACTjH,UAAU,mBACVoG,QAASA,EAJX,6C,SCnGFiB,EAAYC,IAAZD,QAEFE,EAAc,SAACtG,GAInB,IAAQuG,EAAiCvG,EAAjCuG,SAAUC,EAAuBxG,EAAvBwG,mBAMlB,OACE,8BACE,cAAC,IAAD,CACEC,YAAa,OACb5H,MAAO,CAAEgD,OAAQ,KACjB6E,WATmB,SAACpI,GACxBkI,EAAmBlI,IAKjB,SAKGiI,EAAS1C,KAAI,SAACzH,EAAcd,GAAf,OACZ,cAAC8K,EAAD,CAASO,IAAKvK,EAAiB8J,SAAoB,KAAV5K,GAAhBc,W,UCpB3BwK,EAAiBC,IAAjBD,aAEFE,EAAmB,CACvB5E,WAAY,QAGR6E,EAAU,SAAC/G,GAMf,IAAQxD,EAA+CwD,EAA/CxD,KAAMI,EAAyCoD,EAAzCpD,KAAMoK,EAAmChH,EAAnCgH,aAAcC,EAAqBjH,EAArBiH,iBAMlC,OACE,mCACE,cAACL,EAAD,CACEM,QAASF,EAAaxK,OAASA,GAAQwK,EAAapK,OAASA,EAC7DuK,SARe,SAAC9I,GACpB4I,EAAiBzK,EAAMI,IAQnBiC,MACEmI,EAAaxK,OAASA,GAAQwK,EAAapK,OAASA,EAChD,GACAkK,EANR,SASGlK,OCnBDiD,EAAUC,IAAVD,MAEFuH,EAAU,WACd,MAA4BrJ,mBAAmB,IAA/C,mBAAOsJ,EAAP,KAAeC,EAAf,KACA,EAAgCvJ,mBAAmB,IAAnD,mBAAOwJ,EAAP,KAAiBC,EAAjB,KACA,EAA0BzJ,mBAA6B,IAAvD,mBAAO0J,EAAP,KAAcC,EAAd,KAEM5K,EAAkBoB,aAAY,SAACxC,GAAD,OAAwBA,EAAMuB,cAC5DyF,EAAWC,cAEXgF,EAAmB,SAACrJ,EAAa1C,GACrC,GAAa,UAATA,EAAkB,CACpB,IAAMG,EAAa,2BAAQe,GAAR,IAAgBvB,MAAO+C,IAC1CoE,EAAS,CACP9G,KAAM,YACNG,KAAMA,SAEH,GAAa,YAATH,EAAoB,CAC7B,IAAMG,EAAa,2BAAQe,GAAR,IAAgBP,MAAO+B,IAC1CoE,EAAS,CACP9G,KAAM,YACNG,KAAMA,MAKNkL,EAAmB,SAACzK,EAAcI,GACtC,IAAMb,EAAa,2BACde,GADc,IAEjBN,KAAMA,EACNI,KAAMA,IAER8F,EAAS,CACP9G,KAAM,YACNG,KAAMA,KAgBV,OAZAkE,qBAAU,WACRyD,cAAe3I,MAAK,SAAC4I,GACnB2D,EAAU3D,EAAIE,KAAI,SAACzH,GAAD,OAAsBA,EAAKb,aAE/CqM,cAAc7M,MAAK,SAAC4I,GAClB6D,EAAY7D,MAEdkE,cAAW9M,MAAK,SAAC4I,GACf+D,EAAS/D,QAEV,IAGD,eAAC,IAAD,WACE,cAAC,IAAD,CAAK3E,KAAM,EAAX,SACE,cAAC,EAAD,CACEuH,SAAUc,EACVb,mBAAoB,SAAClI,GACnBqJ,EAAiBrJ,EAAK,cAI5B,cAAC,IAAD,CAAKU,KAAM,EAAX,SACE,cAAC,EAAD,CACEuH,SAAUgB,EACVf,mBAAoB,SAAClI,GACnBqJ,EAAiBrJ,EAAK,gBAI5B,cAAC,IAAD,CAAKU,KAAM,GAAX,SACGyI,EAAM5D,KAAI,SAACzH,EAAwBd,GAAzB,OACT,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAK0D,KAAM,GAAX,SACE,cAACa,EAAD,CAAOgD,MAAO,EAAd,SAAkBzG,EAAKoE,SAEzB,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACG5C,EAAKqL,MAAM5D,KAAI,SAACiE,EAAoB7L,GAArB,OACd,8BACG,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK4H,KACzB,SAACkE,EAAeC,GAAhB,OACE,cAAC,EAAD,CAEExL,KAAMJ,EAAKoE,KACX5D,KAAMkL,EAAcC,GACpBf,aAAc,CACZxK,KAAMM,EAAON,KACbI,KAAME,EAAOF,MAEfqK,iBAAkBA,GAPbe,OAJH/L,UANNX,GAyBV,mCCzGJsL,EAAiBC,IAAjBD,aAEFqB,EAAgB,CACpBrG,MAAO,OACPC,OAAQ,GACRiB,aAAc,EACdZ,WAAY,WAGR4E,EAAmB,CACvBlF,MAAO,OACPC,OAAQ,GACRiB,aAAc,EACdZ,WAAY,UACZgG,OAAQ,qBAGJC,EAAW,SAACnI,GAMhB,IAAQoI,EAA6CpI,EAA7CoI,IAAKC,EAAwCrI,EAAxCqI,IAAKC,EAAmCtI,EAAnCsI,aAAcrB,EAAqBjH,EAArBiH,iBAMhC,OACE,mCACE,cAAC,EAAD,CACEC,QAASoB,EAAa7L,UAAY2L,GAAOE,EAAa5L,UAAY2L,EAClElB,SARe,SAAC9I,GACpB4I,EAAiB,CAAExK,QAAS2L,EAAK1L,QAAS2L,KAQtCxJ,MACEyJ,EAAa7L,UAAY2L,GAAOE,EAAa5L,UAAY2L,EACrDJ,EACAnB,EANR,SASGuB,OCtCDxI,EAAUC,IAAVD,MAEF0I,EAAU,WACd,IAAMzL,EAAkBoB,aAAY,SAACxC,GAAD,OAAwBA,EAAMuB,cAC5DyF,EAAWC,cAEXsE,EAAmB,SAACuB,GACxB,IAAMzM,EAAa,2BACde,GADc,IAEjBL,QAAS+L,EAAK/L,QACdC,QAAS8L,EAAK9L,QACdG,MAAO,MAET6F,EAAS,CACP9G,KAAM,YACNG,KAAMA,KAIV,OACE,qCACE,cAAC,IAAD,CAAKsE,QAAQ,SAAb,SACE,cAAC,EAAD,uBAED,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGwD,KAAI,SAACuE,EAAanM,GAAd,OAClC,cAAC,IAAMmE,SAAP,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKpB,KAAM,EAAX,SACE,cAAC,IAAD,CACEiD,MAAM,UACNpD,MAAO,CAAE+C,MAAO,GAAIC,OAAQ,GAAI4G,UAAW,UAF7C,SAIGC,OAAOC,aAAaP,EAAM,QAG9B,CACC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAC5D,GAAI,GAAI,GAAI,GACZvE,KAAI,SAACwE,EAAa/M,GAClB,OACE,mCACW,IAAR+M,EACC,cAAC,IAAD,CAAKrJ,KAAM,GAAQ1D,GAEnB,cAAC,IAAD,CAAK0D,KAAM,EAAeH,MAAO,CAAE4J,UAAW,UAA9C,SACE,cAAC,EAAD,CAEEL,IAAKM,OAAOC,aAAaP,EAAM,IAC/BC,IAAKA,EACLC,aAAc,CACZ7L,QAASK,EAAOL,QAChBC,QAASI,EAAOJ,SAElBuK,iBAAkBA,GAPb3L,IAFUA,YAnBVW,U,4DCfrB4D,GAAgBC,IAAhBD,MAAOkC,GAASjC,IAATiC,KACP6G,GAAWC,IAAXD,OAEFE,GAAY,WAChB,IAAMhM,EAAkBoB,aAAY,SAACxC,GAAD,OAAwBA,EAAMuB,cAGlE,GAFiB0F,cAEFoG,IAAKC,WAAbC,EAAP,oBACA,EAAoClL,mBAAiB,MAArD,mBAAOmL,EAAP,KACA,GADA,KAC0BnL,mBAAiB,OAA3C,mBAAcoL,GAAd,WACA,EAAgCpL,mBAAiB,GAAjD,mBAAOqL,EAAP,KAAiBC,EAAjB,KACA,EAA0BtL,mBAAiB,KAA3C,mBAAOlB,EAAP,UAYA,OACE,mCACE,cAAC,IAAD,CAAKwD,QAAQ,SAAb,SACE,eAAC,IAAD,CAAKrB,KAAM,GAAX,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKA,KAAM,EAAX,SACE,cAAC,IAAD,CACE4C,MAAO,MACPO,SAAS,EACTE,IACEC,yBAEAxF,EAAOvB,MACP,WAIN,cAAC,IAAD,CAAKyD,KAAM,GAAX,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKA,KAAM,EAAGD,UAAU,sBAAxB,0BAGA,cAAC,IAAD,CAAKC,KAAM,GAAID,UAAU,wBAAzB,SACGjC,EAAOvB,QAEV,cAAC,IAAD,CAAKyD,KAAM,EAAGD,UAAU,sBAAxB,0BAGA,cAAC,IAAD,CAAKC,KAAM,GAAID,UAAU,wBAAzB,SACGjC,EAAOP,QAEV,cAAC,IAAD,CAAKyC,KAAM,EAAGD,UAAU,sBAAxB,gCAGA,cAAC,IAAD,CAAKC,KAAM,GAAID,UAAU,wBAAzB,SACGjC,EAAON,OAEV,cAAC,IAAD,CAAKwC,KAAM,EAAGD,UAAU,sBAAxB,0BAGA,cAAC,IAAD,CAAKC,KAAM,GAAID,UAAU,wBAAzB,SACGjC,EAAOF,OAEV,cAAC,IAAD,CAAKoC,KAAM,EAAGD,UAAU,sBAAxB,0BAGA,eAAC,IAAD,CAAKC,KAAM,GAAID,UAAU,wBAAzB,UACGjC,EAAOL,QACPK,EAAOJ,mBAKhB,eAAC,IAAD,CAAK2D,QAAQ,SAASxB,MAAO,CAAEyB,UAAW,IAA1C,UACE,cAAC,IAAD,CAAKtB,KAAM,GAAX,SACE,cAAC,KAAD,CAASsK,YAAY,OAArB,SACE,cAAC,GAAD,CAAOzG,MAAO,EAAd,2CAGJ,cAAC,IAAD,CAAK7D,KAAM,GAAX,SACE,eAAC,IAAD,CAAMuK,OAAO,WAAWN,KAAMA,EAA9B,UACE,cAAC,IAAK1K,KAAN,CAAW8C,MAAM,kCAAjB,SACE,eAAC,KAAMmI,MAAP,CAAaC,SAAO,EAApB,UACE,eAAC,IAAD,CAAQC,YAAY,kCAAS7K,MAAO,CAAE+C,MAAO,OAA7C,UACE,cAACgH,GAAD,CAAQe,MAAM,IAAd,iBACA,cAACf,GAAD,CAAQe,MAAM,IAAd,gBACA,cAACf,GAAD,CAAQe,MAAM,IAAd,mBACA,cAACf,GAAD,CAAQe,MAAM,IAAd,mCAEF,cAAC,KAAD,CAAOD,YAAY,8BAAU7K,MAAO,CAAE+C,MAAO,cAGjD,cAAC,IAAKrD,KAAN,CAAW8C,MAAM,qBAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKrC,KAAM,GAAX,SACE,cAAC,KAAD,CACE0K,YAAY,wCACZC,MAAOP,EACPQ,IAAKV,EACLW,UAAW,SAACF,GAAD,MACT,UAAGA,EAAH,WAAaG,QAAQ,wBAAyB,MAEhD3C,SA5FM,SAACwC,GAC3BR,EAASD,EAAaS,GACtBN,EAAYM,IA2FQ9K,MAAO,CAAE+C,MAAO,YAGpB,eAAC,IAAD,CAAK5C,KAAM,EAAGC,OAAQ,EAAGJ,MAAO,CAAEkL,WAAY,GAA9C,2BACOb,EADP,aAGA,cAAC,IAAD,CAAKlK,KAAM,EAAX,SACE,cAAC,IAAD,CAAQZ,QA/FE,SAACC,GAC7B8K,EAAS,GACTE,EAAYH,IA6FM,8CAIN,cAAC,IAAK3K,KAAN,CAAW8C,MAAM,2BAAjB,SACE,eAAC,KAAMmI,MAAP,CAAaC,SAAO,EAApB,UACE,eAAC,IAAD,CAAQC,YAAY,2BAAO7K,MAAO,CAAE+C,MAAO,OAA3C,UACE,cAACgH,GAAD,CAAQe,MAAO,IAAf,0BACA,cAACf,GAAD,CAAQe,MAAO,IAAf,0BACA,cAACf,GAAD,CAAQe,MAAO,IAAf,0BACA,cAACf,GAAD,CAAQe,MAAO,IAAf,0BACA,cAACf,GAAD,CAAQe,MAAO,IAAf,6BAEF,eAAC,IAAD,CAAQD,YAAY,2BAAO7K,MAAO,CAAE+C,MAAO,OAA3C,UACE,cAACgH,GAAD,CAAQe,MAAO,IAAf,gCACA,cAACf,GAAD,CAAQe,MAAO,IAAf,8CACA,cAACf,GAAD,CAAQe,MAAO,IAAf,8CACA,cAACf,GAAD,CAAQe,MAAO,IAAf,8CACA,cAACf,GAAD,CAAQe,MAAO,IAAf,8DAOZ,cAAC,IAAD,CAAKtJ,QAAQ,SAASxB,MAAO,CAAEyB,UAAW,IAA1C,SACE,cAAC,IAAD,UACE,eAACyB,GAAD,CAAMiI,MAAI,EAACnL,MAAO,CAAE0B,SAAU,QAA9B,oDACY,IACTmI,OAAO7L,EAAQuM,GAAUU,QAAQ,wBAAyB,KAF7D,wBCvJN/H,GAAgBjC,IAAhBiC,KAAMlC,GAAUC,IAAVD,MAERoK,GAAW,WACf,IAAMC,EAAY,CAChB3J,SAAU,GACV4J,WAAY,QAERrN,EAAkBoB,aAAY,SAACxC,GAAD,OAAwBA,EAAMuB,cAElE,OACE,eAAC,IAAMmD,SAAP,WACE,cAAC,KAAD,CAASgK,QAAM,EAAf,SACE,cAAC,GAAD,CAAOvH,MAAO,EAAd,yCAEF,cAAC,IAAD,CAAM9D,UAAU,iBAAhB,SACE,eAAC,IAAD,CAAK6E,OAAQ,CAAC,EAAG,GAAjB,UACE,cAAC,IAAD,CAAK5E,KAAM,GAAX,SACE,cAAC,GAAD,CAAO6D,MAAO,EAAd,SAAmC,KAAjB/F,EAAOvB,MAAe,IAAMuB,EAAOvB,UAGvD,cAAC,IAAD,CAAKyD,KAAM,EAAX,SACE,cAAC,GAAD,CAAMH,MAAOqL,EAAb,4BAEF,cAAC,IAAD,CAAKlL,KAAM,GAAX,SAAiC,KAAjBlC,EAAOP,MAAe,IAAMO,EAAOP,QAEnD,cAAC,IAAD,CAAKyC,KAAM,EAAX,SACE,cAAC,GAAD,CAAMH,MAAOqL,EAAb,kCAEF,cAAC,IAAD,CAAKlL,KAAM,GAAX,SAAgC,KAAhBlC,EAAON,KAAc,IAAMM,EAAON,OAElD,cAAC,IAAD,CAAKwC,KAAM,EAAX,SACE,cAAC,GAAD,CAAMH,MAAOqL,EAAb,4BAEF,cAAC,IAAD,CAAKlL,KAAM,GAAX,SAAgC,KAAhBlC,EAAOF,KAAc,IAAME,EAAOF,OAElD,cAAC,IAAD,CAAKoC,KAAM,EAAX,SACE,cAAC,GAAD,CAAMH,MAAOqL,EAAb,6BAEF,cAAC,IAAD,CAAKlL,KAAM,GAAIH,MAAO,CAAEgD,OAAQ,IAAhC,SACsB,KAAnB/E,EAAOL,QACN,cAAC,IAAD,CAAKwF,MAAM,UAAUlD,UAAU,cAA/B,eAIA,eAAC,IAAD,CAAKkD,MAAM,UAAUlD,UAAU,cAA/B,UACGjC,EAAOL,QACPK,EAAOJ,kBAMlB,eAAC,GAAD,CAAOmG,MAAO,EAAd,mCAAyB/F,EAAOD,MAAhC,iBC/CAiI,GAAQ,CACZ,CACEvJ,MAAO,+CACPC,QAAS,SAEX,CACED,MAAO,4BACPC,QAAS,UAEX,CACED,MAAO,eACPC,QAAS,SAgEE6O,GA5DK,SAACrK,GACnB,IAAMlD,EAAkBoB,aAAY,SAACxC,GAAD,OAAwBA,EAAMuB,cAElE,EAAkCc,mBAAiB,GAAnD,mBAAOuM,EAAP,KAAkBC,EAAlB,KAsBA,OACE,eAAC,IAAMnK,SAAP,WACE,cAAC,IAAD,CAAKvB,MAAO,CAAEyB,UAAW,IAAzB,SACE,cAAC,IAAD,CAAKtB,KAAM,GAAX,SACE,cAAC,EAAD,CAAU8F,MAAOA,GAAOC,KAAMuF,QAGlC,eAAC,IAAD,WACE,cAAC,IAAD,CAAKtL,KAAM,GAAX,SACE,eAAC,IAAD,CAAMD,UAAU,eAAhB,UACiB,IAAduL,GAAmB,cAAC,EAAD,IACL,IAAdA,GAAmB,cAAC,EAAD,IACL,IAAdA,GAAmB,cAAC,GAAD,SAGxB,cAAC,IAAD,CAAKtL,KAAM,EAAX,SACE,cAAC,IAAD,CAAMD,UAAU,mBAAhB,SACE,cAAC,GAAD,WAIN,cAAC,IAAD,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,EAAD,CACE8F,MAAOA,GACPC,KAAMuF,EACNpF,iBA9Ce,SAACsF,GACxB,GAAkB,SAAdA,EAAsB,CACxB,GACgB,IAAdF,IACkB,KAAjBxN,EAAOvB,OACW,KAAjBuB,EAAOP,OACS,KAAhBO,EAAON,MACS,KAAhBM,EAAOF,MAGT,YADA4E,IAAQoE,QAAQ,yEAGlB,GAAkB,IAAd0E,IAAuC,KAAnBxN,EAAOL,SAAqC,IAAnBK,EAAOJ,SAEtD,YADA8E,IAAQoE,QAAQ,4DAIpB2E,EAA2B,SAAdC,EAAuBF,EAAY,EAAIA,EAAY,IA8BxD3K,iBAAkBK,EAAML,2BCnE9B8K,GAAU,CACdlK,SAAU,QA2CGmK,GAxCA,SAAC1K,GACd,MAAsCjC,mBAAiB,SAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,OACE,eAAC,IAAMmC,SAAP,WACE,eAAC,IAAD,CACEhC,QAPmB,SAACC,GACxBJ,EAAeI,EAAEC,MAObqM,aAAc,CAAC3M,GACfmB,KAAK,aACLJ,UAAU,YAJZ,UAME,cAAC,IAAKR,KAAN,CAEEC,KAAM,cAACoM,EAAA,EAAD,CAAmB/L,MAAO4L,KAChC5L,MAAO4L,GAHT,yBACM,SAMN,cAAC,IAAKlM,KAAN,CAEEC,KAAM,cAACqM,EAAA,EAAD,CAAkBhM,MAAO4L,KAC/B5L,MAAO4L,GAHT,yBACM,kBAOS,UAAhBzM,GACC,cAAC,EAAD,CAAW4B,eAAgB,kBAAM3B,EAAe,kBAEjC,gBAAhBD,GACC,cAAC,GAAD,CAAa2B,iBAAkBK,EAAML,wB,iMC/B9BmL,EAdK,SAAC9K,GAOnB,OACE,cAAC,IAAMI,SAAP,UACE,cAAC,IAAD,CAAM2K,SARG,CAAC,UAAM,UAAM,UAAM,UAAM,WAQZ5D,SANC,SAACwC,GAC1B3J,EAAMgL,QAAQrB,IAKwCA,MAAO3J,EAAMiL,U,QCN/DC,EAAaC,IAAbD,SACAtC,EAAWC,IAAXD,OAEFwC,EAAS,SAAC,GAAD,IAAGjE,EAAH,EAAGA,SAAUkE,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,WAAY3B,EAAnC,EAAmCA,MAAnC,OACb,qCACE,cAAC,IAAKpL,KAAN,UACE,cAAC2M,EAAD,CAAUK,KAAM,EAAGpE,SAAUA,EAAUwC,MAAOA,MAEhD,cAAC,IAAKpL,KAAN,UACE,cAAC,IAAD,CACEoD,SAAS,SACTwD,QAASmG,EACTlN,QAASiN,EACTzP,KAAK,UAJP,mDA6FS4P,EAjFM,SAACxL,GACpB,IAAQyL,EAAezL,EAAfyL,WAER,EAAoC1N,oBAAkB,GAAtD,mBAAOuN,EAAP,KAAmBI,EAAnB,KACA,EAA0B3N,mBAAiB,IAA3C,mBAAO4L,EAAP,KAAcgC,EAAd,KACA,EAAwB5N,mBAAiB,GAAzC,mBAAOkN,EAAP,KAAaD,EAAb,KACA,EAAqBjN,mBAAiBqG,KAAKC,MAAsB,GAAhBD,KAAKE,WAA/CsH,EAAP,oBAEA,EAA4B7N,mBAAuB,IAAnD,mBAAO8N,EAAP,KAAeC,EAAf,KAqCA,OANA7L,qBAAU,WACRyD,cAAe3I,MAAK,SAAC4I,GACnBmI,EAAUnI,QAEX,IAGD,eAAC,IAAMvD,SAAP,WACE,eAAC,IAAD,CAAQ2L,aAAa,GAAGlN,MAAO,CAAE+C,MAAO,KAAxC,UACE,cAACgH,EAAD,CAAQe,MAAM,GAAd,uCACCkC,EAAOhI,KAAI,SAACzH,GAAD,OACV,cAACwM,EAAD,CAAQe,MAAOvN,EAAKkC,IAApB,SAA0BlC,EAAKb,cAGnC,cAAC,EAAD,CAAa0P,KAAMA,EAAMD,QAASA,IAClC,cAAC,IAAD,CACEgB,OACE,mCACE,cAAC,IAAD,CACE3J,IACEC,2BAEAsJ,EACA,OAEFxJ,IAAI,cAIV5G,QACE,cAAC,EAAD,CACE2L,SAnCW,SAAC9I,GACpBsN,EAAStN,EAAE4N,OAAOtC,QAmCV0B,SA7DW,WACd1B,IAIL+B,GAAc,GAEd/F,YAAW,WACT+F,GAAc,GACdC,EAAS,IAETF,EAAW,CACTS,OAAQxN,aAAaC,QAAQ,YACzBD,aAAaC,QAAQ,YACrB,QACJwN,SAAU,EACV3Q,QAASmO,EACTsB,KAAMA,EACNmB,KAAM,EACNC,QAAS,EACTT,WAAYA,MAEb,OAwCKN,WAAYA,EACZ3B,MAAOA,U,kFC9EX9J,EAAgBC,IAAhBD,MAAOkC,EAASjC,IAATiC,KA4FAuK,EA1FE,SAACtM,GAChB,MACEA,EAAM5D,KADA8P,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAAU3Q,EAA1B,EAA0BA,QAASyP,EAAnC,EAAmCA,KAAMmB,EAAzC,EAAyCA,KAAMC,EAA/C,EAA+CA,QAAST,EAAxD,EAAwDA,WAGxD,EAA0B7N,mBAASqO,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCzO,mBAASsO,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA4B3O,mBAAS,MAArC,mBAAOpC,EAAP,KAAegR,EAAf,KACA,EAA4B5O,mBAAuB,IAAnD,mBAAO8N,EAAP,KAAeC,EAAf,KAiBA7L,qBAAU,WACRyD,cAAe3I,MAAK,SAAC4I,GACnBmI,EAAUnI,QAEX,IAEH,IAAMO,EAAU,CACd,cAAC,IAAD,CAAkC3I,MAAM,OAAxC,SACE,uBAAM6C,QAvBS,WACjBoO,EAASJ,EAAO,GAChBM,EAAYL,GACZM,EAAU,UAoBR,UACGrJ,wBAAyB,UAAX3H,EAAqBiR,IAAarI,KACjD,sBAAMxF,UAAU,iBAAhB,SAAkCwN,QAHzB,sBAMb,cAAC,IAAD,CAAqChR,MAAM,UAA3C,SACE,uBAAM6C,QAxBY,WACpBoO,EAASJ,GACTM,EAAYL,EAAU,GACtBM,EAAU,aAqBR,UACGE,IAAMvJ,cACM,aAAX3H,EAAwBmR,IAAgBC,KAE1C,sBAAMhO,UAAU,iBAAhB,SAAkC0N,QALzB,yBAQb,2CAAU,0BACV,cAAC,IAAD,CAEEO,OAAQtO,aAAaC,QAAQ,cAAgBuN,EAF/C,SAIE,cAAC,IAAD,CAAQe,QAAM,EAACrR,KAAK,OAAOwC,QA9BH,WAC1BoD,IAAQM,KAAK,8BA6BX,2BAHI,mBASR,OACE,cAAC,IAAD,CACE/C,UAAU,mBACVmF,QAASA,EACTgJ,OAAQhB,EACRF,OACE,cAAC,IAAD,CACE3J,IACEC,2BAA+CsJ,EAAa,OAE9DxJ,IAAI,YAGR5G,QACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKwD,KAAM,GAAX,SACE,cAAC,IAAD,CAAMkH,UAAQ,EAACyD,MAAOsB,MAExB,cAAC,IAAD,CAAKjM,KAAM,GAAIH,MAAO,CAAEkL,WAAY,EAAG7B,OAAQ,iBAA/C,SACE,cAACrI,EAAD,CAAOgD,MAAO,EAAd,SACGgJ,EACE1P,QAAO,SAACgR,GAAD,OAAuBA,EAAM7O,MAAQ6N,KAC5CtI,KAAI,SAACsJ,GAAD,OAAuBA,EAAM5R,aAGxC,cAAC,IAAD,CAAKyD,KAAM,GAAX,SACE,cAAC+C,EAAD,UAAOvG,Y,mBCnGXuG,EAASjC,IAATiC,KAEFqL,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,mCACE,cAAC,IAAD,CAAKhN,QAAQ,SAAb,SACE,cAAC,IAAD,CACE2C,WAAYqK,EACZC,OACE,qCACGD,EAASvR,OACTuR,EAASvR,OAAS,EACjB,cAAC,EAAD,8CAEA,cAAC,EAAD,2CAINyR,WAAW,aACXtK,WAAY,SAACjD,GAAD,OAAgB,cAAC,EAAD,CAAU5D,KAAM4D,KAC5CjB,UAAU,qBA6BHyO,EAvBA,WACb,MAAwBzP,mBAAqB,IAA7C,mBAAO0P,EAAP,KAAaC,EAAb,KAYA,OANAzN,qBAAU,WACR0N,cAAc5S,MAAK,SAAC4I,GAClB+J,EAAQ/J,QAET,IAGD,eAAC,IAAMvD,SAAP,WACE,cAAC,IAAD,UAAOqN,EAAK3R,OAAS,GAAK,cAAC,EAAD,CAAauR,SAAUI,MACjD,cAAC,IAAD,UACE,cAAC,EAAD,CAAchC,WAdK,SAACmC,GACxBF,EAAQD,EAAKI,OAAOD,a,sCC/BhB7L,GADQ,IAAI+L,UACGhO,IAAfiC,MAmDOgM,GAnDQjO,IAATqD,KAEW,SAACnD,GAKxB,MAIIA,EAHFgO,QAAkBzS,GADpB,EACaD,MADb,EACoBC,OAAO2Q,EAD3B,EAC2BA,OAAQ1Q,EADnC,EACmCA,QAASyS,EAD5C,EAC4CA,UAC1CC,EAEElO,EAFFkO,QACAC,EACEnO,EADFmO,QAGIC,EACJ,eAAC,IAAD,CAAMvP,MAAO,CAAEqD,WAAY,OAAQiE,WAAY,GAAI7F,WAAY,GAA/D,UACE,cAAC,IAAK/B,KAAN,CAAWM,MAAO,CAAEoD,MAAO,QAA3B,4CACA,cAAC,IAAK1D,KAAN,CAAWM,MAAO,CAAEoD,MAAO,QAA3B,gDAIJ,OACE,cAAC,IAAD,CACE1G,MAAOA,EACP2S,QAASA,EACTG,SAAU,kBAAMF,KAChBG,OAAQ,CACN,cAAC,IAAD,CAAoBlQ,QAAS,kBAAM+P,KAAnC,yBAAY,UALhB,SAUE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKnP,KAAM,GAAX,SACE,cAAC,IAAD,CAAUK,QAAS+O,EAAMG,UAAU,aAAnC,SACE,cAAC,IAAD,CAAQ3S,KAAK,OAAb,SAAqBsQ,QAGzB,cAAC,IAAD,CAAKlN,KAAM,EAAX,SACE,eAAC,EAAD,CAAMpD,KAAK,YAAX,UACE,cAAC4S,EAAA,EAAD,IACC,IAAMP,OAGX,cAAC,IAAD,CAAKjP,KAAM,GAAIC,OAAQ,EAAvB,gBACGzD,QADH,IACGA,OADH,EACGA,EAASiT,WAAW,MAAO,eC+BvBC,EA1ED,WACZ,IA0BA,EAAwB3Q,mBAAmB,IAA3C,mBAAOhC,EAAP,KAAa4S,EAAb,KAEA,EAA4C5Q,oBAAkB,GAA9D,mBAAO6Q,EAAP,KAAuBC,EAAvB,KACA,EAA8B9Q,mBAAiB,IAA/C,mBAAOiQ,EAAP,KAAgBc,EAAhB,KAUMC,EAAkB,SAACC,GAPvBH,GAAkB,GASlBC,EAAWE,IASb,OANA/O,qBAAU,WACRgP,cAAelU,MAAK,SAAC4I,GACnBgL,EAAQhL,QAET,IAGD,eAAC,IAAMvD,SAAP,WACE,cAAC,IAAD,CACE8O,QArDU,CACd,CACE3T,MAAO,sBACP4T,UAAW,QACX7Q,IAAK,QACLsD,MAAO,KAET,CACErG,MAAO,eACP4T,UAAW,QACX7Q,IAAK,QACLsD,MAAO,KAET,CACErG,MAAO,qBACP4T,UAAW,SACX7Q,IAAK,UAEP,CACE/C,MAAO,qBACP4T,UAAW,YACX7Q,IAAK,YACLsD,MAAO,MAgCLoB,WAAYjH,EACZqT,MAAO,SAACJ,EAAQK,GACd,MAAO,CACLjR,QAAS,SAACkR,GACRP,EAAgBC,MAItBO,WAAY,CAAEC,SAAU,CAAC,mBAE3B,cAAC,EAAD,CACExB,QAASA,EACTE,QAASU,EACTT,QAhCe,WACnBU,GAAkB,UCrChBpE,EAAU,CACdlK,SAAU,QAsCGkP,EAnCG,WAChB,MAAsC1R,mBAAiB,UAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAKA,OACE,eAAC,IAAMmC,SAAP,WACE,eAAC,IAAD,CACEhC,QANmB,SAACC,GACxBJ,EAAeI,EAAEC,MAMbqM,aAAc,CAAC3M,GACfmB,KAAK,aACLJ,UAAU,YAJZ,UAME,cAAC,IAAKR,KAAN,CAEEC,KAAM,cAAC2F,EAAA,EAAD,CAActF,MAAO4L,IAC3B5L,MAAO4L,EAHT,sCACM,UAMN,cAAC,IAAKlM,KAAN,CAEEC,KAAM,cAACkR,EAAA,EAAD,CAAgB7Q,MAAO4L,IAC7B5L,MAAO4L,EAHT,2CACM,YAOS,WAAhBzM,GAA4B,cAAC,EAAD,IACZ,UAAhBA,GAA2B,cAAC,EAAD,S,wHC1BnB2R,EAVA,WACb,MAAsC5R,mBAAiB,SAAvD,6BAMA,OAAO,cAAC,IAAMqC,SAAP,sBCGMwP,EAVD,WACZ,MAAsC7R,mBAAiB,SAAvD,6BAMA,OAAO,cAAC,IAAMqC,SAAP,qBCGMyP,EAVE,WACf,MAAsC9R,mBAAiB,SAAvD,6BAMA,OAAO,cAAC,IAAMqC,SAAP,wB,qDCPD2B,EAASjC,IAATiC,KACA+N,EAAUC,IAAVD,MA4COE,EA1CI,SAAChQ,GAClB,IAAoBlD,EAAgBkD,EAA5B/C,WAAoBqB,EAAQ0B,EAAR1B,IAEtBgP,EACJ,eAAC,IAAD,CAAKzO,MAAO,CAAE+C,MAAO,QAArB,UACE,cAAC,IAAD,CAAK5C,KAAM,GAAX,SACE,eAAC+C,EAAD,0CAAejF,EAAOR,UAAtB,SAEF,cAAC,IAAD,CAAK0C,KAAM,GAAX,SACE,cAAC+C,EAAD,CAAMlD,MAAO,CAAE0B,SAAU,OAAQ4J,WAAY,QAA7C,SACGrN,EAAOvB,aAMhB,OACE,cAAC,IAAM6E,SAAP,UACE,cAAC,IAAD,CAAU6P,mBAAmB,QAAQpR,MAAO,CAAEyB,UAAW,GAAzD,SACE,cAACwP,EAAD,CAAOxC,OAAQA,EAAf,SACE,cAAC,IAAD,CAAKtO,KAAM,GAAX,SACE,eAAC,IAAD,CAAczD,MAAM,4BAApB,UACE,cAAC,IAAagD,KAAd,CAAmB8C,MAAM,eAAzB,SAA+BvE,EAAOP,QACtC,eAAC,IAAagC,KAAd,CAAmB8C,MAAM,eAAzB,UACGvE,EAAON,KADV,IACiBM,EAAOL,QACrBK,EAAOJ,WAEV,cAAC,IAAa6B,KAAd,CAAmB8C,MAAM,4BAAzB,SACGvE,EAAOF,OAEV,eAAC,IAAa2B,KAAd,CAAmB8C,MAAM,4BAAzB,UACGvE,EAAOH,KADV,IACiBG,EAAOF,QAExB,cAAC,IAAa2B,KAAd,CAAmB8C,MAAM,eAAzB,SAA+BvE,EAAOD,cAdhByB,QCDrB4R,EApBQ,WACrB,MAA8BnS,mBAAoB,IAAlD,mBAAOoS,EAAP,KAAgBC,EAAhB,KAQA,OANAnQ,qBAAU,WACRoQ,cAAmBtV,MAAK,SAAC4I,GACvByM,EAAWzM,QAEZ,IAGD,cAAC,IAAMvD,SAAP,UACE,qBAAKvB,MAAO,CAAEyB,UAAW,IAAzB,SACG6P,EAAQtM,KAAI,SAACzH,EAAed,GAAhB,OACX,cAAC,EAAD,CAAY2B,WAAYb,GAAWd,WCLvCmP,EAAU,CACdlK,SAAU,QA8CG+P,EA3CA,WACb,MAAsCvS,mBAAiB,kBAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAKA,OACE,eAAC,IAAMmC,SAAP,WACE,cAAC,IAAD,CACEhC,QANmB,SAACC,GACxBJ,EAAeI,EAAEC,MAMbqM,aAAc,CAAC3M,GACfmB,KAAK,aACLJ,UAAU,YAJZ,SAgBE,cAAC,IAAKR,KAAN,CAEEC,KAAM,cAAC+R,EAAA,EAAD,CAAiB1R,MAAO4L,IAC9B5L,MAAO4L,EAHT,qCACM,oBAUS,WAAhBzM,GAA4B,cAAC,EAAD,IACZ,UAAhBA,GAA2B,cAAC,EAAD,IACX,mBAAhBA,GAAoC,cAAC,EAAD,IACpB,aAAhBA,GAA8B,cAAC,EAAD,S,sWC9CxB0F,EAAY,uCAAG,4BAAA4B,EAAA,6DACtBuG,EAAuB,GADD,SAEpB2E,IACHC,IAAInO,6BACJvH,MAAK,SAAC2V,GACL7E,EAAS6E,EAAS3U,KAAKA,QALD,gCAQnB8P,GARmB,2CAAH,qDAWZjE,EAAW,uCAAG,4BAAAtC,EAAA,6DACrBiC,EAAqB,GADA,SAEnBiJ,IACHC,IAAInO,+BACJvH,MAAK,SAAC2V,GAAc,IAAD,gBACIA,EAAS3U,KAAKA,MADlB,IAClB,2BAA0C,CAAC,IAAhC4U,EAA+B,QACxCpJ,EAASqJ,KAAKD,EAAQpU,QAFN,kCAJG,gCAUlBgL,GAVkB,2CAAH,qDAaXM,EAAQ,uCAAG,4BAAAvC,EAAA,sEAEhBkL,IACHC,IAAInO,iCACJvH,MAAK,SAAC2V,GACLnJ,EAAWmJ,EAAS3U,KAAKA,QALP,gCAQfwL,GARe,2CAAH,qDAWR0H,EAAY,uCAAG,4BAAA3J,EAAA,6DACtBuL,EAAsB,GADA,SAEpBL,IACHC,IAAInO,4BACJvH,MAAK,SAAC2V,GAAc,IAAD,gBACCA,EAAS3U,KAAKA,MADf,IAClB,2BAAuC,CAAC,IAA7BK,EAA4B,QACrCyU,EAAUD,KAAKxU,IAFC,kCAJI,gCAUnByU,GAVmB,2CAAH,qDAaZlD,EAAW,uCAAG,4BAAArI,EAAA,6DACrB+H,EAAuB,GADF,SAEnBmD,IACHC,IAAInO,+BACJvH,MAAK,SAAC2V,GACOA,EAAS3U,KAAKA,KACtB+U,SACF,SAACC,GAQC,IAAMhV,EAAiB,CACrBmQ,OAAQ6E,EAAQ7E,OAChBC,SAAU4E,EAAQ5E,SAClB3Q,QAASuV,EAAQvV,QACjByP,KAAM8F,EAAQ9F,KACdmB,KAAM2E,EAAQ3E,KACdC,QAAS0E,EAAQ1E,QACjBT,WAAYxH,KAAKC,MAAsB,GAAhBD,KAAKE,WAE9B+I,EAASuD,KAAK7U,SAxBG,gCA6BlBsR,GA7BkB,2CAAH,qDAgCXgD,EAAgB,uCAAG,4BAAA/K,EAAA,6DAC1B6K,EAAqB,GADK,SAExBK,IACHC,IAAInO,qCACJvH,MAAK,SAAC2V,GACLP,EAAUO,EAAS3U,KAAKA,QALE,gCAQvBoU,GARuB,2CAAH,uD","file":"static/js/main.fbe7071b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IAlarm } from \"../common/interface\";\r\n\r\nconst alarmList: IAlarm[] = [\r\n  {\r\n    index: 0,\r\n    title: \"알림\",\r\n    content: \"작성글에 반응이 2개 있습니다.\",\r\n  },\r\n  {\r\n    index: 1,\r\n    title: \"결제실패\",\r\n    content: \"잔액 부족으로 결제 실패\",\r\n  },\r\n];\r\n\r\nconst alarm = (state = alarmList, action) => {\r\n  if (action.type === \"addAlarm\") {\r\n    const newIdx = state.length === 0 ? 0 : state[state.length - 1].index + 1;\r\n    return [...state, { index: newIdx, ...action.data }];\r\n  } else if (action.type === \"deleteAlarm\") {\r\n    if (action.idx === undefined) {\r\n      return [];\r\n    } else {\r\n      const temp = state.filter((item) => item.index !== action.idx);\r\n      return temp;\r\n    }\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default alarm;\r\n","import { ITicket } from \"../common/interface\";\r\n\r\nconst myTicket: ITicket = {\r\n  reserveNo: \"\",\r\n  title: \"\",\r\n  place: \"\",\r\n  room: \"\",\r\n  seatRow: \"\",\r\n  seatCol: 0,\r\n  date: \"\",\r\n  time: \"\",\r\n  price: 10000,\r\n};\r\n\r\nconst ticket = (state = myTicket, action) => {\r\n  if (action.type === \"setTicket\") {\r\n    return action.data;\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default ticket;\r\n","import { combineReducers } from \"redux\";\r\nimport alarm from \"./alarmReducer\";\r\nimport ticket from \"./ticketReducer\";\r\n\r\nexport default combineReducers({\r\n  alarmData: alarm,\r\n  ticketData: ticket,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport rootReducers from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(rootReducers);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.less\";\r\nimport \"./style/style.css\";\r\nimport { Affix, Badge, Button, Col, Dropdown, Layout, Menu, Row } from \"antd\";\r\nimport { Cinema } from \"./pages/Cinema\";\r\nimport { Community } from \"./pages/Community\";\r\nimport { MyPage } from \"./pages/MyPage\";\r\nimport { UserOutlined, BellOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport Login from \"./pages/Login\";\r\nimport PresentReserve from \"./pages/PresentReserve\";\r\nimport Alarm from \"./pages/Alarm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IAlarm, IStoreState } from \"./common/interface\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst App = () => {\r\n  const [menuItemKey, setMenuItemKey] = useState<string>(\"cinema\");\r\n\r\n  const alarmList: IAlarm[] = useSelector(\r\n    (state: IStoreState) => state.alarmData\r\n  );\r\n\r\n  const handleMenuItemOnClick = (e: any) => {\r\n    setMenuItemKey(e.key);\r\n  };\r\n\r\n  const handleDropDownOnClick = (e: { key: React.SetStateAction<string> }) => {\r\n    setMenuItemKey(e.key);\r\n  };\r\n\r\n  const handleLogoutOnClick = () => {\r\n    global.localStorage.removeItem(\"userName\");\r\n    global.localStorage.removeItem(\"password\");\r\n\r\n    setMenuItemKey(\"cinema\");\r\n  };\r\n\r\n  const handleLoginOnClick = () => {\r\n    setMenuItemKey(\"login\");\r\n  };\r\n\r\n  const dropDownMenu = (\r\n    <Menu onClick={handleDropDownOnClick}>\r\n      <Menu.Item key=\"login\" icon={<UserOutlined />}>\r\n        {global.localStorage.getItem(\"userName\") ? (\r\n          <span onClick={handleLogoutOnClick}>로그아웃</span>\r\n        ) : (\r\n          <span onClick={handleLoginOnClick}>로그인</span>\r\n        )}\r\n      </Menu.Item>\r\n      <Menu.Item key=\"presentReserve\" icon={<UserOutlined />}>\r\n        예매현황\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Layout style={{ fontFamily: \"scoreDream1\" }}>\r\n      <Affix>\r\n        <Header>\r\n          <div className=\"logo\" />\r\n          <Row>\r\n            <Col span={10} offset={4}>\r\n              <Menu\r\n                theme=\"dark\"\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={[menuItemKey]}\r\n                onClick={handleMenuItemOnClick}\r\n              >\r\n                <Menu.Item key={\"cinema\"}>시네마</Menu.Item>\r\n                <Menu.Item key={\"community\"}>커뮤니티</Menu.Item>\r\n                <Menu.Item key={\"mypage\"}>내 정보</Menu.Item>\r\n              </Menu>\r\n            </Col>\r\n            <Col span={1} offset={4}>\r\n              <Dropdown\r\n                overlay={<Alarm alarmList={alarmList} />}\r\n                trigger={[\"click\"]}\r\n              >\r\n                <Badge count={alarmList.length}>\r\n                  <Button\r\n                    icon={<BellOutlined className=\"nav_dropdown_icon\" />}\r\n                    shape=\"circle\"\r\n                    ghost\r\n                    style={{ borderColor: \"transparent\" }}\r\n                  />\r\n                </Badge>\r\n              </Dropdown>\r\n            </Col>\r\n            <Col span={1}>\r\n              <Dropdown overlay={dropDownMenu} trigger={[\"click\"]}>\r\n                <Button\r\n                  icon={<UserOutlined className=\"nav_dropdown_icon\" />}\r\n                  shape=\"circle\"\r\n                  ghost\r\n                  style={{ borderColor: \"transparent\" }}\r\n                />\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Header>\r\n      </Affix>\r\n      <Content className=\"layout_content\">\r\n        <Row>\r\n          <Col span={16} offset={4}>\r\n            {menuItemKey === \"cinema\" && (\r\n              <Cinema\r\n                showOnlineTicket={() => setMenuItemKey(\"presentReserve\")}\r\n              />\r\n            )}\r\n            {menuItemKey === \"community\" && <Community />}\r\n            {menuItemKey === \"mypage\" && <MyPage />}\r\n            {menuItemKey === \"login\" && (\r\n              <Login setMenuItemKey={setMenuItemKey} />\r\n            )}\r\n            {menuItemKey === \"presentReserve\" && (\r\n              <PresentReserve reserveOnClick={() => setMenuItemKey(\"cinema\")} />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n      <Footer className=\"layout_footer\">Toy Project by.yelly</Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox, message, Typography, Row } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Login = (props: { setMenuItemKey: Function }) => {\r\n  const { setMenuItemKey } = props;\r\n\r\n  const onFinish = (values: any) => {\r\n    const { username, password, remember } = values;\r\n    global.localStorage.setItem(\"userName\", username);\r\n    global.localStorage.setItem(\"remember\", remember);\r\n    setMenuItemKey(\"cinema\");\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const isRemember = () => {\r\n    return global.localStorage.getItem(\"remember\") === \"true\" ? true : false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(isRemember());\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row justify=\"center\">\r\n        <Title style={{ marginTop: \"20%\", fontSize: \"36pt\" }}>BOM CINEMA</Title>\r\n      </Row>\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 8 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"아이디\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: \"아이디를 입력해주세요.\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"비밀번호\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"비밀번호를 입력해주세요.\" }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"remember\"\r\n          valuePropName=\"checked\"\r\n          wrapperCol={{ offset: 8, span: 16 }}\r\n        >\r\n          <Checkbox>아이디 기억하기</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 8, span: 8 }}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{ width: \"100%\", height: 40 }}\r\n          >\r\n            로그인\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            htmlType=\"button\"\r\n            onClick={() => {\r\n              message.info(\"개발 예정\");\r\n            }}\r\n            style={{ width: \"100%\", height: 40 }}\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Row,\r\n  Col,\r\n  PageHeader,\r\n  Empty,\r\n  Button,\r\n  Card,\r\n  Typography,\r\n} from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IStoreState, ITicket } from \"../common/interface\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst PresentReserve = (props: { reserveOnClick: Function }) => {\r\n  const { reserveOnClick } = props;\r\n\r\n  //실제 서비스에서는 스토어에서 불러오는게 아닌 DB에서 데이터 가져옴\r\n  const ticket: ITicket = useSelector((state: IStoreState) => state.ticketData);\r\n\r\n  const content = (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <Text style={{ fontSize: \"32pt\" }}>{ticket.title}</Text>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <Text type=\"secondary\">예매번호: {ticket.reserveNo}</Text>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\" style={{ marginTop: \"32px\" }}>\r\n        <Col>\r\n          <Text style={{ fontSize: \"18pt\" }}>\r\n            {ticket.place}점/{ticket.room}\r\n          </Text>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <Text\r\n            style={{\r\n              fontSize: \"18pt\",\r\n              color: \"#00000073\",\r\n              background: \"#ffe58f\",\r\n            }}\r\n          >\r\n            {ticket.seatRow}열{ticket.seatCol}\r\n          </Text>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\" style={{ marginTop: \"12px\" }}>\r\n        <Col>\r\n          <Text style={{ fontSize: \"28pt\" }}>시작 시간 {ticket.time}~</Text>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <Text type=\"secondary\">20분 전부터 입장 가능합니다.</Text>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\" style={{ marginTop: \"12px\" }}>\r\n        <Col span={6}>\r\n          <Image\r\n            preview={false}\r\n            width={\"100%\"}\r\n            alt=\"QR CODE\"\r\n            src={process.env.PUBLIC_URL + \"/images/qrcode.jpg\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PageHeader title=\"온라인 티켓\" subTitle=\"\" />\r\n      {ticket.title === \"\" ? (\r\n        <Empty\r\n          description={<span>현재 예매한 영화가 없습니다.</span>}\r\n          style={{ marginTop: \"15%\" }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              reserveOnClick();\r\n            }}\r\n          >\r\n            예매하러 가기\r\n          </Button>\r\n        </Empty>\r\n      ) : (\r\n        <Row justify=\"center\">\r\n          <Col className=\"ticket_wrapper\">\r\n            <Card>{content}</Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PresentReserve;\r\n","import React from \"react\";\r\nimport { Button, List, Typography, Row, Col, Divider, Menu } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport { IAlarm, IStoreState, ITicket } from \"../common/interface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Alarm = (props: { alarmList: IAlarm[] }) => {\r\n  const { alarmList } = props;\r\n\r\n  const ticket: ITicket = useSelector((state: IStoreState) => state.ticketData);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTest = () => {\r\n    console.log(moment().format(\"YYYYMMDD\"));\r\n    const data: ITicket = {\r\n      reserveNo: moment().format(\"YYYYMMDD\") + \"0106\",\r\n      title: \"222누젬ㄱ\",\r\n      place: \"222플레이스\",\r\n      room: \"dfs\",\r\n      seatRow: \"22ㄴㄷㅁㅅ\",\r\n      seatCol: 1,\r\n      date: \"222날짜\",\r\n      time: \"222시간\",\r\n      price: 2353,\r\n    };\r\n    dispatch({\r\n      type: \"setTicket\",\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu className=\"alarm_wrapper\">\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify=\"space-between\" align=\"middle\">\r\n            <Title level={4} className=\"alarm_title\">\r\n              알림\r\n            </Title>\r\n            <Button\r\n              type=\"text\"\r\n              onClick={() => {\r\n                dispatch({ type: \"deleteAlarm\" });\r\n              }}\r\n              style={{ marginTop: 5 }}\r\n            >\r\n              모두 지우기\r\n            </Button>\r\n            {/* <Button type=\"text\" onClick={handleTest}>\r\n              티켓등록\r\n            </Button>\r\n            <Button\r\n              type=\"text\"\r\n              onClick={() => {\r\n                console.log(ticket);\r\n              }}\r\n            >\r\n              chedck\r\n            </Button>\r\n            <Button\r\n              type=\"text\"\r\n              onClick={() => {\r\n                dispatch({\r\n                  type: \"addAlarm\",\r\n                  data: { title: \"test\", content: \"egweg\" },\r\n                });\r\n              }}\r\n            >\r\n              add\r\n            </Button> */}\r\n          </Row>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Divider style={{ marginTop: 5, marginBottom: 0 }} />\r\n        </Col>\r\n        <Col span={24}>\r\n          <List\r\n            className=\"alarm_list_wrapper\"\r\n            bordered\r\n            dataSource={alarmList}\r\n            renderItem={(item: IAlarm) => (\r\n              <List.Item className=\"alarm_list_item\">\r\n                <List.Item.Meta\r\n                  title={\r\n                    <>\r\n                      <Row justify=\"center\" align=\"middle\">\r\n                        <Col span={21}>\r\n                          {item.title}\r\n                          {item.index}\r\n                        </Col>\r\n                        <Col span={1}></Col>\r\n                        <Col span={2}>\r\n                          <CloseOutlined\r\n                            onClick={() =>\r\n                              dispatch({ type: \"deleteAlarm\", idx: item.index })\r\n                            }\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  description={\r\n                    <>\r\n                      <Row justify=\"center\" align=\"middle\">\r\n                        <Col span={21}>{item.content}</Col>\r\n                        <Col span={1}></Col>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Alarm;\r\n","import React, { useState, createElement, useEffect } from \"react\";\r\nimport { Card, Col, PageHeader, Row, Space, Typography } from \"antd\";\r\nimport { IMovieList } from \"../../../common/interface\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport {\r\n  StarOutlined,\r\n  LikeOutlined,\r\n  MessageOutlined,\r\n} from \"@ant-design/icons/lib/icons\";\r\nimport { getMovieList } from \"../../../common/api\";\r\n\r\nconst { Link } = Typography;\r\n\r\nconst IconText = ({ icon, text }) => (\r\n  <Space>\r\n    {createElement(icon)}\r\n    {text}\r\n  </Space>\r\n);\r\n\r\nconst MovieList = (props: { reserveOnClick: Function }) => {\r\n  const { reserveOnClick } = props;\r\n  const [ranking, setRanking] = useState<IMovieList[]>([]);\r\n\r\n  useEffect(() => {\r\n    getMovieList().then((res) => {\r\n      setRanking(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PageHeader\r\n        title=\"Movie\"\r\n        subTitle=\"현재 상영 중\"\r\n        style={{ marginBottom: \"-20px\" }}\r\n      />\r\n      <Row gutter={[8, 16]}>\r\n        {ranking.map((item: IMovieList, index: number) => (\r\n          <Col span={8} key={index}>\r\n            <Card\r\n              hoverable\r\n              key={index}\r\n              title={index + 1 + \" 위\"}\r\n              extra={\r\n                <Link\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    reserveOnClick();\r\n                  }}\r\n                >\r\n                  예매하기\r\n                </Link>\r\n              }\r\n              style={{ width: \"100%\" }}\r\n              cover={\r\n                <img\r\n                  alt={item.title}\r\n                  src={\r\n                    process.env.PUBLIC_URL +\r\n                    \"/images/movies/\" +\r\n                    item.title +\r\n                    \".jpg\"\r\n                  }\r\n                />\r\n              }\r\n              actions={[\r\n                <IconText\r\n                  icon={StarOutlined}\r\n                  text={Math.floor(Math.random() * 1000)}\r\n                  key=\"favorite\"\r\n                />,\r\n                <IconText\r\n                  icon={LikeOutlined}\r\n                  text={Math.floor(Math.random() * 500)}\r\n                  key=\"like\"\r\n                />,\r\n                <IconText\r\n                  icon={MessageOutlined}\r\n                  text={Math.floor(Math.random() * 50)}\r\n                  key=\"reply\"\r\n                />,\r\n              ]}\r\n            >\r\n              <Meta\r\n                title={item.title}\r\n                description={\r\n                  \"예매율\" + item.bookRate + \" | 개봉일\" + item.releaseDate\r\n                }\r\n              />\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useState } from \"react\";\r\nimport { Steps, Button, message, Row, Col } from \"antd\";\r\nimport { MessageType } from \"antd/lib/message\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IAlarm, IStoreState, ITicket } from \"../../../common/interface\";\r\nimport moment from \"moment\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst Progress = (props: { steps: any; step: number }) => {\r\n  const { steps, step } = props;\r\n\r\n  return (\r\n    <>\r\n      <Steps current={step}>\r\n        {steps.map((item) => (\r\n          <Step key={item.title} title={item.title} />\r\n        ))}\r\n      </Steps>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ProgressBtn = (props: {\r\n  steps: any;\r\n  step: number;\r\n  handleStepChange: Function;\r\n  showOnlineTicket: Function;\r\n}) => {\r\n  const { steps, step, handleStepChange, showOnlineTicket } = props;\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const ticket: ITicket = useSelector((state: IStoreState) => state.ticketData);\r\n  const dispatch = useDispatch();\r\n\r\n  const submit = async () => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve(message.warning(\"결제 진행 중\"));\r\n      }, 1000);\r\n    })\r\n      .then(() => {\r\n        message.success(\"결제 완료!\");\r\n      })\r\n      .then(() => {\r\n        //실제 서비스에서는 이부분에서 DB에 데이터 저장하고 store는 초기화\r\n        const data: ITicket = {\r\n          ...ticket,\r\n          reserveNo: moment().format(\"YYYYMMDD\") + \"0106\",\r\n          date: moment().format(\"YYYY-MM-DD : hh:mm:ss\"),\r\n        };\r\n        dispatch({\r\n          type: \"setTicket\",\r\n          data: data,\r\n        });\r\n      });\r\n    return promise;\r\n  };\r\n\r\n  const handleSubmitOnClick = async () => {\r\n    setLoading(true);\r\n    await submit()\r\n      .finally(() => {\r\n        setLoading(false);\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"addAlarm\",\r\n          data: { title: \"예매 성공\", content: \"예매 완료되었습니다.\" },\r\n        });\r\n      })\r\n      .then(() => {\r\n        setTimeout(() => {\r\n          showOnlineTicket();\r\n        }, 1000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Row style={{ marginTop: \"30px\" }}>\r\n      <Col span={11}>\r\n        <Button\r\n          disabled={step === 0}\r\n          onClick={() => handleStepChange(\"prev\")}\r\n          style={{ marginLeft: \"3%\" }}\r\n          className=\"reserve_step_btn\"\r\n        >\r\n          이전단계\r\n        </Button>\r\n      </Col>\r\n      <Col span={11} offset={1}>\r\n        {step < steps.length - 1 && (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleStepChange(\"next\")}\r\n            className=\"reserve_step_btn\"\r\n          >\r\n            다음\r\n          </Button>\r\n        )}\r\n        {step === steps.length - 1 && (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleSubmitOnClick}\r\n            className=\"reserve_step_btn\"\r\n            loading={loading}\r\n          >\r\n            결제하기\r\n          </Button>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport { Progress, ProgressBtn };\r\n","import React from \"react\";\r\nimport { Tabs } from \"antd\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst SlidingTabs = (props: {\r\n  children: string[];\r\n  handleTabKeyChange: Function;\r\n}) => {\r\n  const { children, handleTabKeyChange } = props;\r\n\r\n  const handleTabOnClick = (key: string) => {\r\n    handleTabKeyChange(key);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tabs\r\n        tabPosition={\"left\"}\r\n        style={{ height: 450 }}\r\n        onTabClick={handleTabOnClick}\r\n      >\r\n        {children.map((item: string, index: number) => (\r\n          <TabPane tab={item} key={item} disabled={index === 28} />\r\n        ))}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SlidingTabs };\r\n","import React from \"react\";\r\nimport { Tag } from \"antd\";\r\n\r\nconst { CheckableTag } = Tag;\r\n\r\nconst notSelectedStyle = {\r\n  background: \"#eee\",\r\n};\r\n\r\nconst TimeTag = (props: {\r\n  room: string;\r\n  time: string;\r\n  selectedTime: any;\r\n  handleTagOnClick: Function;\r\n}) => {\r\n  const { room, time, selectedTime, handleTagOnClick } = props;\r\n\r\n  const handleChange = (e: boolean) => {\r\n    handleTagOnClick(room, time);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckableTag\r\n        checked={selectedTime.room === room && selectedTime.time === time}\r\n        onChange={handleChange}\r\n        style={\r\n          selectedTime.room === room && selectedTime.time === time\r\n            ? {}\r\n            : notSelectedStyle\r\n        }\r\n      >\r\n        {time}\r\n      </CheckableTag>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { TimeTag };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Typography } from \"antd\";\r\nimport { SlidingTabs } from \"./SlidingTabs\";\r\nimport { TimeTag } from \"./TimeTag\";\r\nimport {\r\n  IMovieStartTimes,\r\n  IMovieList,\r\n  ITicket,\r\n  IStoreState,\r\n} from \"../../../common/interface\";\r\nimport { getMovieList, getTheaters, getTimes } from \"../../../common/api\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst StepOne = () => {\r\n  const [titles, setTitles] = useState<string[]>([]);\r\n  const [theaters, setTheaters] = useState<string[]>([]);\r\n  const [times, setTimes] = useState<IMovieStartTimes[]>([]);\r\n\r\n  const ticket: ITicket = useSelector((state: IStoreState) => state.ticketData);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTabOnClick = (key: string, type: string) => {\r\n    if (type === \"title\") {\r\n      const data: ITicket = { ...ticket, title: key };\r\n      dispatch({\r\n        type: \"setTicket\",\r\n        data: data,\r\n      });\r\n    } else if (type === \"theater\") {\r\n      const data: ITicket = { ...ticket, place: key };\r\n      dispatch({\r\n        type: \"setTicket\",\r\n        data: data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTagOnClick = (room: string, time: string) => {\r\n    const data: ITicket = {\r\n      ...ticket,\r\n      room: room,\r\n      time: time,\r\n    };\r\n    dispatch({\r\n      type: \"setTicket\",\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieList().then((res) => {\r\n      setTitles(res.map((item: IMovieList) => item.title));\r\n    });\r\n    getTheaters().then((res) => {\r\n      setTheaters(res);\r\n    });\r\n    getTimes().then((res) => {\r\n      setTimes(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={7}>\r\n        <SlidingTabs\r\n          children={titles}\r\n          handleTabKeyChange={(key: string) => {\r\n            handleTabOnClick(key, \"title\");\r\n          }}\r\n        />\r\n      </Col>\r\n      <Col span={6}>\r\n        <SlidingTabs\r\n          children={theaters}\r\n          handleTabKeyChange={(key: string) => {\r\n            handleTabOnClick(key, \"theater\");\r\n          }}\r\n        />\r\n      </Col>\r\n      <Col span={11}>\r\n        {times.map((item: IMovieStartTimes, index: number) => (\r\n          <>\r\n            <Row key={index}>\r\n              <Col span={24}>\r\n                <Title level={5}>{item.name}</Title>\r\n              </Col>\r\n              <Col span={24}>\r\n                {item.times.map((timesEachRoom: any, idx: number) => (\r\n                  <div key={idx}>\r\n                    {[\"1\", \"2\", \"3\", \"4\", \"5\"].map(\r\n                      (order: string, i: number) => (\r\n                        <TimeTag\r\n                          key={i}\r\n                          room={item.name}\r\n                          time={timesEachRoom[order]}\r\n                          selectedTime={{\r\n                            room: ticket.room,\r\n                            time: ticket.time,\r\n                          }}\r\n                          handleTagOnClick={handleTagOnClick}\r\n                        />\r\n                      )\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n          </>\r\n        ))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport { StepOne };\r\n","import React from \"react\";\r\nimport { Tag } from \"antd\";\r\nimport { ISeat } from \"../../../common/interface\";\r\n\r\nconst { CheckableTag } = Tag;\r\n\r\nconst selectedStyle = {\r\n  width: \"100%\",\r\n  height: 25,\r\n  marginBottom: 5,\r\n  background: \"#2c2c2c\",\r\n};\r\n\r\nconst notSelectedStyle = {\r\n  width: \"100%\",\r\n  height: 25,\r\n  marginBottom: 5,\r\n  background: \"#cbcbcb\",\r\n  border: \"1px solid #858585\",\r\n};\r\n\r\nconst SeatTags = (props: {\r\n  row: string;\r\n  col: number;\r\n  selectedSeat: ISeat;\r\n  handleTagOnClick: Function;\r\n}) => {\r\n  const { row, col, selectedSeat, handleTagOnClick } = props;\r\n\r\n  const handleChange = (e: boolean) => {\r\n    handleTagOnClick({ seatRow: row, seatCol: col });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckableTag\r\n        checked={selectedSeat.seatRow === row && selectedSeat.seatCol === col}\r\n        onChange={handleChange}\r\n        style={\r\n          selectedSeat.seatRow === row && selectedSeat.seatCol === col\r\n            ? selectedStyle\r\n            : notSelectedStyle\r\n        }\r\n      >\r\n        {col}\r\n      </CheckableTag>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { SeatTags };\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Typography, Tag } from \"antd\";\r\nimport { SeatTags } from \"./SeatTag\";\r\nimport { ISeat, IStoreState, ITicket } from \"../../../common/interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst StepTwo = () => {\r\n  const ticket: ITicket = useSelector((state: IStoreState) => state.ticketData);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTagOnClick = (seat: ISeat) => {\r\n    const data: ITicket = {\r\n      ...ticket,\r\n      seatRow: seat.seatRow,\r\n      seatCol: seat.seatCol,\r\n      price: 10000,\r\n    };\r\n    dispatch({\r\n      type: \"setTicket\",\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Title>SCREEN</Title>\r\n      </Row>\r\n      {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((row: number, idx: number) => (\r\n        <React.Fragment key={idx}>\r\n          <Row>\r\n            <Col span={1}>\r\n              <Tag\r\n                color=\"default\"\r\n                style={{ width: 50, height: 25, textAlign: \"center\" }}\r\n              >\r\n                {String.fromCharCode(row + 65)}\r\n              </Tag>\r\n            </Col>\r\n            {[\r\n              0, 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16,\r\n              17, 18, 19, 0,\r\n            ].map((col: number, index: number) => {\r\n              return (\r\n                <>\r\n                  {col === 0 ? (\r\n                    <Col span={1} key={index}></Col>\r\n                  ) : (\r\n                    <Col span={1} key={index} style={{ textAlign: \"center\" }}>\r\n                      <SeatTags\r\n                        key={index}\r\n                        row={String.fromCharCode(row + 65)}\r\n                        col={col}\r\n                        selectedSeat={{\r\n                          seatRow: ticket.seatRow,\r\n                          seatCol: ticket.seatCol,\r\n                        }}\r\n                        handleTagOnClick={handleTagOnClick}\r\n                      />\r\n                    </Col>\r\n                  )}\r\n                </>\r\n              );\r\n            })}\r\n          </Row>\r\n        </React.Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { StepTwo };\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Typography,\r\n  Select,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { IStoreState, ITicket } from \"../../../common/interface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst StepThree = () => {\r\n  const ticket: ITicket = useSelector((state: IStoreState) => state.ticketData);\r\n  const dispatch = useDispatch();\r\n\r\n  const [form] = Form.useForm();\r\n  const [pointOrign, setPointOrign] = useState<number>(1490);\r\n  const [point, setPoint] = useState<number>(1490);\r\n  const [usePoint, setUsePoint] = useState<number>(0);\r\n  const [price, setPrice] = useState<number>(10000);\r\n\r\n  const handlePointOnChange = (value: any) => {\r\n    setPoint(pointOrign - value);\r\n    setUsePoint(value);\r\n  };\r\n\r\n  const handlePointUseOnClick = (e: any) => {\r\n    setPoint(0);\r\n    setUsePoint(pointOrign);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col span={16}>\r\n          <Row>\r\n            <Col span={8}>\r\n              <Image\r\n                width={\"90%\"}\r\n                preview={false}\r\n                src={\r\n                  process.env.PUBLIC_URL +\r\n                  \"/images/movies/\" +\r\n                  ticket.title +\r\n                  \".jpg\"\r\n                }\r\n              />\r\n            </Col>\r\n            <Col span={16}>\r\n              <Row>\r\n                <Col span={8} className=\"payment_table_label\">\r\n                  제목\r\n                </Col>\r\n                <Col span={16} className=\"payment_table_content\">\r\n                  {ticket.title}\r\n                </Col>\r\n                <Col span={8} className=\"payment_table_label\">\r\n                  지점\r\n                </Col>\r\n                <Col span={16} className=\"payment_table_content\">\r\n                  {ticket.place}\r\n                </Col>\r\n                <Col span={8} className=\"payment_table_label\">\r\n                  상영관\r\n                </Col>\r\n                <Col span={16} className=\"payment_table_content\">\r\n                  {ticket.room}\r\n                </Col>\r\n                <Col span={8} className=\"payment_table_label\">\r\n                  시간\r\n                </Col>\r\n                <Col span={16} className=\"payment_table_content\">\r\n                  {ticket.time}\r\n                </Col>\r\n                <Col span={8} className=\"payment_table_label\">\r\n                  좌석\r\n                </Col>\r\n                <Col span={16} className=\"payment_table_content\">\r\n                  {ticket.seatRow}\r\n                  {ticket.seatCol}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\" style={{ marginTop: 30 }}>\r\n            <Col span={24}>\r\n              <Divider orientation=\"left\">\r\n                <Title level={4}>결제 정보</Title>\r\n              </Divider>\r\n            </Col>\r\n            <Col span={20}>\r\n              <Form layout=\"vertical\" form={form}>\r\n                <Form.Item label=\"휴대폰 번호\">\r\n                  <Input.Group compact>\r\n                    <Select placeholder=\"통신사 선택\" style={{ width: \"35%\" }}>\r\n                      <Option value=\"0\">SKT</Option>\r\n                      <Option value=\"1\">KT</Option>\r\n                      <Option value=\"2\">LG U+</Option>\r\n                      <Option value=\"3\">알뜰폰</Option>\r\n                    </Select>\r\n                    <Input placeholder=\"- 없이 입력\" style={{ width: \"65%\" }} />\r\n                  </Input.Group>\r\n                </Form.Item>\r\n                <Form.Item label=\"포인트\">\r\n                  <Row>\r\n                    <Col span={10}>\r\n                      <InputNumber\r\n                        placeholder=\"사용할 포인트\"\r\n                        value={usePoint}\r\n                        max={pointOrign}\r\n                        formatter={(value) =>\r\n                          `${value} 점`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                        }\r\n                        onChange={handlePointOnChange}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Col>\r\n                    <Col span={6} offset={2} style={{ paddingTop: 5 }}>\r\n                      보유: {pointOrign} 점\r\n                    </Col>\r\n                    <Col span={6}>\r\n                      <Button onClick={handlePointUseOnClick}>모두 사용</Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item label=\"결제정보\">\r\n                  <Input.Group compact>\r\n                    <Select placeholder=\"카드선택\" style={{ width: \"40%\" }}>\r\n                      <Option value={\"1\"}>국민</Option>\r\n                      <Option value={\"2\"}>신한</Option>\r\n                      <Option value={\"3\"}>농협</Option>\r\n                      <Option value={\"4\"}>삼성</Option>\r\n                      <Option value={\"5\"}>현대</Option>\r\n                    </Select>\r\n                    <Select placeholder=\"할부기간\" style={{ width: \"60%\" }}>\r\n                      <Option value={\"1\"}>일시불</Option>\r\n                      <Option value={\"2\"}>2개월 무이자</Option>\r\n                      <Option value={\"3\"}>3개월 무이자</Option>\r\n                      <Option value={\"4\"}>4개월 무이자</Option>\r\n                      <Option value={\"5\"}>5개월 무이자</Option>\r\n                    </Select>\r\n                  </Input.Group>\r\n                </Form.Item>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\" style={{ marginTop: 30 }}>\r\n            <Col>\r\n              <Text mark style={{ fontSize: \"28pt\" }}>\r\n                최종 결제 금액:{\" \"}\r\n                {String(price - usePoint).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                원\r\n              </Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { StepThree };\r\n","import React from \"react\";\r\nimport { Row, Col, Card, Typography, Tag, Divider } from \"antd\";\r\nimport { IStoreState, ITicket } from \"../../../common/interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst SideCard = () => {\r\n  const textStyle = {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n  };\r\n  const ticket: ITicket = useSelector((state: IStoreState) => state.ticketData);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Divider dashed>\r\n        <Title level={3}>티켓 정보</Title>\r\n      </Divider>\r\n      <Card className=\"sideCard_inner\">\r\n        <Row gutter={[0, 8]}>\r\n          <Col span={24}>\r\n            <Title level={4}>{ticket.title === \"\" ? \"-\" : ticket.title}</Title>\r\n          </Col>\r\n\r\n          <Col span={8}>\r\n            <Text style={textStyle}>지점</Text>\r\n          </Col>\r\n          <Col span={16}>{ticket.place === \"\" ? \"-\" : ticket.place}</Col>\r\n\r\n          <Col span={8}>\r\n            <Text style={textStyle}>상영관</Text>\r\n          </Col>\r\n          <Col span={16}>{ticket.room === \"\" ? \"-\" : ticket.room}</Col>\r\n\r\n          <Col span={8}>\r\n            <Text style={textStyle}>시간</Text>\r\n          </Col>\r\n          <Col span={16}>{ticket.time === \"\" ? \"-\" : ticket.time}</Col>\r\n\r\n          <Col span={8}>\r\n            <Text style={textStyle}>좌석 </Text>\r\n          </Col>\r\n          <Col span={16} style={{ height: 25 }}>\r\n            {ticket.seatRow === \"\" ? (\r\n              <Tag color=\"#2c2c2c\" className=\"reserve_tag\">\r\n                -\r\n              </Tag>\r\n            ) : (\r\n              <Tag color=\"#2c2c2c\" className=\"reserve_tag\">\r\n                {ticket.seatRow}\r\n                {ticket.seatCol}\r\n              </Tag>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      <Title level={2}>총 금액 : {ticket.price} 원</Title>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { SideCard };\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Card, Col, message, Row } from \"antd\";\r\nimport { Progress, ProgressBtn } from \"./Progress\";\r\nimport { StepOne } from \"./StepOne\";\r\nimport { StepTwo } from \"./StepTwo\";\r\nimport { StepThree } from \"./StepThree\";\r\nimport { IStoreState, ITicket } from \"../../../common/interface\";\r\nimport { SideCard } from \"./SideCard\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst steps = [\r\n  {\r\n    title: \"영화/상영관 선택\",\r\n    content: \"First\",\r\n  },\r\n  {\r\n    title: \"좌석 선택\",\r\n    content: \"Second\",\r\n  },\r\n  {\r\n    title: \"결제\",\r\n    content: \"Last\",\r\n  },\r\n];\r\n\r\nconst Reservation = (props: { showOnlineTicket: Function }) => {\r\n  const ticket: ITicket = useSelector((state: IStoreState) => state.ticketData);\r\n\r\n  const [stepValue, setStepValue] = useState<number>(0);\r\n\r\n  const handleStepChange = (direction: string) => {\r\n    if (direction !== \"prev\") {\r\n      if (\r\n        stepValue === 0 &&\r\n        (ticket.title === \"\" ||\r\n          ticket.place === \"\" ||\r\n          ticket.room === \"\" ||\r\n          ticket.time === \"\")\r\n      ) {\r\n        message.warning(\"예매 정보를 선택해주세요.\");\r\n        return;\r\n      }\r\n      if (stepValue === 1 && (ticket.seatRow === \"\" || ticket.seatCol === 0)) {\r\n        message.warning(\"좌석을 선택해주세요.\");\r\n        return;\r\n      }\r\n    }\r\n    setStepValue(direction === \"prev\" ? stepValue - 1 : stepValue + 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginTop: 30 }}>\r\n        <Col span={17}>\r\n          <Progress steps={steps} step={stepValue} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={17}>\r\n          <Card className=\"reserve_card\">\r\n            {stepValue === 0 && <StepOne />}\r\n            {stepValue === 1 && <StepTwo />}\r\n            {stepValue === 2 && <StepThree />}\r\n          </Card>\r\n        </Col>\r\n        <Col span={7}>\r\n          <Card className=\"sideCard_wrapper\">\r\n            <SideCard />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={17}>\r\n          <ProgressBtn\r\n            steps={steps}\r\n            step={stepValue}\r\n            handleStepChange={handleStepChange}\r\n            showOnlineTicket={props.showOnlineTicket}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Reservation;\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport {\r\n  VideoCameraFilled,\r\n  CalendarFilled,\r\n  CalendarOutlined,\r\n} from \"@ant-design/icons\";\r\nimport MovieList from \"./movie/MovieList\";\r\nimport Reservation from \"./reservation/Reservation\";\r\n\r\nconst bigFont = {\r\n  fontSize: \"18pt\",\r\n};\r\n\r\nconst Cinema = (props: { showOnlineTicket: Function }) => {\r\n  const [menuItemKey, setMenuItemKey] = useState<string>(\"movie\");\r\n\r\n  const handlMenuOnClick = (e: any) => {\r\n    setMenuItemKey(e.key);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Menu\r\n        onClick={handlMenuOnClick}\r\n        selectedKeys={[menuItemKey]}\r\n        mode=\"horizontal\"\r\n        className=\"nav_under\"\r\n      >\r\n        <Menu.Item\r\n          key=\"movie\"\r\n          icon={<VideoCameraFilled style={bigFont} />}\r\n          style={bigFont}\r\n        >\r\n          영화\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"reservation\"\r\n          icon={<CalendarOutlined style={bigFont} />}\r\n          style={bigFont}\r\n        >\r\n          예매\r\n        </Menu.Item>\r\n      </Menu>\r\n      {menuItemKey === \"movie\" && (\r\n        <MovieList reserveOnClick={() => setMenuItemKey(\"reservation\")} />\r\n      )}\r\n      {menuItemKey === \"reservation\" && (\r\n        <Reservation showOnlineTicket={props.showOnlineTicket} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Cinema;\r\n","import React from \"react\";\r\nimport { Rate } from \"antd\";\r\n\r\nconst CommentRate = (props: { rate: number; setRate: Function }) => {\r\n  const desc = [\"1점\", \"2점\", \"3점\", \"4점\", \"5점\"];\r\n\r\n  const handleRateOnChange = (value: any) => {\r\n    props.setRate(value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Rate tooltips={desc} onChange={handleRateOnChange} value={props.rate} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CommentRate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Comment, Avatar, Form, Button, Input, Select } from \"antd\";\r\nimport CommentRate from \"./CommentRate\";\r\nimport { IMovieList } from \"../../../common/interface\";\r\nimport { getMovieList } from \"../../../common/api\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n  <>\r\n    <Form.Item>\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button\r\n        htmlType=\"submit\"\r\n        loading={submitting}\r\n        onClick={onSubmit}\r\n        type=\"primary\"\r\n      >\r\n        리뷰 남기기\r\n      </Button>\r\n    </Form.Item>\r\n  </>\r\n);\r\n\r\nconst WriteComment = (props: { addComment: Function }) => {\r\n  const { addComment } = props;\r\n\r\n  const [submitting, setSubmitting] = useState<boolean>(false);\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const [rate, setRate] = useState<number>(5);\r\n  const [profileIdx] = useState<number>(Math.floor(Math.random() * 16));\r\n\r\n  const [movies, setMovies] = useState<IMovieList[]>([]);\r\n\r\n  const handleSubmit = () => {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n\r\n    setTimeout(() => {\r\n      setSubmitting(false);\r\n      setValue(\"\");\r\n\r\n      addComment({\r\n        writer: localStorage.getItem(\"userName\")\r\n          ? localStorage.getItem(\"userName\")\r\n          : \"guest\",\r\n        movieKey: 2,\r\n        content: value,\r\n        rate: rate,\r\n        like: 0,\r\n        dislike: 0,\r\n        profileIdx: profileIdx,\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieList().then((res) => {\r\n      setMovies(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Select defaultValue=\"\" style={{ width: 300 }}>\r\n        <Option value=\"\">영화 선택</Option>\r\n        {movies.map((item: IMovieList) => (\r\n          <Option value={item.key}>{item.title}</Option>\r\n        ))}\r\n      </Select>\r\n      <CommentRate rate={rate} setRate={setRate} />\r\n      <Comment\r\n        avatar={\r\n          <>\r\n            <Avatar\r\n              src={\r\n                process.env.PUBLIC_URL +\r\n                \"/images/profiles/\" +\r\n                profileIdx +\r\n                \".svg\"\r\n              }\r\n              alt=\"profile\"\r\n            />\r\n          </>\r\n        }\r\n        content={\r\n          <Editor\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            submitting={submitting}\r\n            value={value}\r\n          />\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WriteComment;\r\n","import React, { useState, useEffect, createElement } from \"react\";\r\nimport {\r\n  Comment,\r\n  Avatar,\r\n  Rate,\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  Tooltip,\r\n  Card,\r\n  Button,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  DislikeOutlined,\r\n  LikeOutlined,\r\n  DislikeFilled,\r\n  LikeFilled,\r\n} from \"@ant-design/icons\";\r\nimport { IComment, IMovieList } from \"../../../common/interface\";\r\nimport { getMovieList } from \"../../../common/api\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Comments = (props: { item: IComment }) => {\r\n  const { writer, movieKey, content, rate, like, dislike, profileIdx } =\r\n    props.item;\r\n\r\n  const [likes, setLikes] = useState(like);\r\n  const [dislikes, setDislikes] = useState(dislike);\r\n  const [action, setAction] = useState(null);\r\n  const [movies, setMovies] = useState<IMovieList[]>([]);\r\n\r\n  const handlelike = () => {\r\n    setLikes(like + 1);\r\n    setDislikes(dislike);\r\n    setAction(\"liked\");\r\n  };\r\n  const handledislike = () => {\r\n    setLikes(like);\r\n    setDislikes(dislike + 1);\r\n    setAction(\"disliked\");\r\n  };\r\n\r\n  const handleDeleteOnClick = () => {\r\n    message.info(\"개발 예정\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieList().then((res) => {\r\n      setMovies(res);\r\n    });\r\n  }, []);\r\n\r\n  const actions = [\r\n    <Tooltip key=\"comment-basic-like\" title=\"Like\">\r\n      <span onClick={handlelike}>\r\n        {createElement(action === \"liked\" ? LikeFilled : LikeOutlined)}\r\n        <span className=\"comment-action\">{likes}</span>\r\n      </span>\r\n    </Tooltip>,\r\n    <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\r\n      <span onClick={handledislike}>\r\n        {React.createElement(\r\n          action === \"disliked\" ? DislikeFilled : DislikeOutlined\r\n        )}\r\n        <span className=\"comment-action\">{dislikes}</span>\r\n      </span>\r\n    </Tooltip>,\r\n    <span key=\"comment-basic-reply-to\">Reply to</span>,\r\n    <Col\r\n      key=\"comment-delete\"\r\n      hidden={localStorage.getItem(\"userName\") !== writer}\r\n    >\r\n      <Button danger type=\"text\" onClick={handleDeleteOnClick}>\r\n        삭제\r\n      </Button>\r\n    </Col>,\r\n  ];\r\n\r\n  return (\r\n    <Comment\r\n      className=\"review_list_item\"\r\n      actions={actions}\r\n      author={writer}\r\n      avatar={\r\n        <Avatar\r\n          src={\r\n            process.env.PUBLIC_URL + \"/images/profiles/\" + profileIdx + \".svg\"\r\n          }\r\n          alt=\"profile\"\r\n        />\r\n      }\r\n      content={\r\n        <Row>\r\n          <Col span={24}>\r\n            <Rate disabled value={rate} />\r\n          </Col>\r\n          <Col span={24} style={{ paddingTop: 5, border: \"0px solid red\" }}>\r\n            <Title level={4}>\r\n              {movies\r\n                .filter((movie: IMovieList) => movie.key === movieKey)\r\n                .map((movie: IMovieList) => movie.title)}\r\n            </Title>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Text>{content}</Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n    ></Comment>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport WriteComment from \"./WriteComment\";\r\nimport Comments from \"./Comments\";\r\nimport { getComments } from \"../../../common/api\";\r\nimport { IComment } from \"../../../common/interface\";\r\nimport { Card, List, Typography, Row } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst CommentList = ({ comments }) => (\r\n  <>\r\n    <Row justify=\"center\">\r\n      <List\r\n        dataSource={comments}\r\n        header={\r\n          <>\r\n            {comments.length}\r\n            {comments.length > 1 ? (\r\n              <Text>개의 리뷰들</Text>\r\n            ) : (\r\n              <Text>개의 리뷰</Text>\r\n            )}\r\n          </>\r\n        }\r\n        itemLayout=\"horizontal\"\r\n        renderItem={(props: any) => <Comments item={props} />}\r\n        className=\"review_list\"\r\n      />\r\n    </Row>\r\n  </>\r\n);\r\n\r\nconst Review = () => {\r\n  const [list, setList] = useState<IComment[]>([]);\r\n\r\n  const handleAddComment = (newComment: IComment) => {\r\n    setList(list.concat(newComment));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getComments().then((res) => {\r\n      setList(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>{list.length > 0 && <CommentList comments={list} />}</Card>\r\n      <Card>\r\n        <WriteComment addComment={handleAddComment} />\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React from \"react\";\r\nimport { Modal, Button, Row, Col, Typography, Dropdown, Menu } from \"antd\";\r\nimport { IBoard } from \"../../common/interface\";\r\nimport { EyeOutlined } from \"@ant-design/icons\";\r\nlet domparser = new DOMParser();\r\nconst { Text, Link } = Typography;\r\n\r\nconst ShowTableContent = (props: {\r\n  rowData: IBoard;\r\n  visible: boolean;\r\n  onClose: Function;\r\n}) => {\r\n  const {\r\n    rowData: { index, title, writer, content, viewCount },\r\n    visible,\r\n    onClose,\r\n  } = props;\r\n\r\n  const menu = (\r\n    <Menu style={{ background: \"#666\", marginLeft: 50, marginTop: -5 }}>\r\n      <Menu.Item style={{ color: \"#eee\" }}>쪽지보내기</Menu.Item>\r\n      <Menu.Item style={{ color: \"#eee\" }}>작성글 보기</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      visible={visible}\r\n      onCancel={() => onClose()}\r\n      footer={[\r\n        <Button key=\"close\" onClick={() => onClose()}>\r\n          닫기\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Row>\r\n        <Col span={21}>\r\n          <Dropdown overlay={menu} placement=\"bottomLeft\">\r\n            <Button type=\"link\">{writer}</Button>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col span={3}>\r\n          <Text type=\"secondary\">\r\n            <EyeOutlined />\r\n            {\" \" + viewCount}\r\n          </Text>\r\n        </Col>\r\n        <Col span={22} offset={1}>\r\n          {content?.replaceAll(\"<|>\", \"\\n\")}\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShowTableContent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PageHeader, Table } from \"antd\";\r\nimport ShowTableContent from \"./ShowTableContent\";\r\nimport { IBoard } from \"../../../common/interface\";\r\nimport { getBoardData } from \"../../../common/api\";\r\n\r\nconst Board = () => {\r\n  const columns = [\r\n    {\r\n      title: \"글 번호\",\r\n      dataIndex: \"index\",\r\n      key: \"index\",\r\n      width: 100,\r\n    },\r\n    {\r\n      title: \"제목\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      width: 450,\r\n    },\r\n    {\r\n      title: \"작성자\",\r\n      dataIndex: \"writer\",\r\n      key: \"writer\",\r\n    },\r\n    {\r\n      title: \"조회수\",\r\n      dataIndex: \"viewCount\",\r\n      key: \"viewCount\",\r\n      width: 100,\r\n    },\r\n  ];\r\n\r\n  const [data, setData] = useState<IBoard[]>([]);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\r\n  const [rowData, setRowData] = useState<IBoard>({} as any);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const tableRowOnClick = (record: IBoard) => {\r\n    showModal();\r\n    setRowData(record);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBoardData().then((res) => {\r\n      setData(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={data}\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            onClick: (event) => {\r\n              tableRowOnClick(record);\r\n            },\r\n          };\r\n        }}\r\n        pagination={{ position: [\"bottomCenter\"] }}\r\n      />\r\n      <ShowTableContent\r\n        rowData={rowData}\r\n        visible={isModalVisible}\r\n        onClose={handleCancel}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { CoffeeOutlined, StarOutlined } from \"@ant-design/icons\";\r\nimport Review from \"./review/Review\";\r\nimport Board from \"./board/Board\";\r\n\r\nconst bigFont = {\r\n  fontSize: \"18pt\",\r\n};\r\n\r\nconst Community = () => {\r\n  const [menuItemKey, setMenuItemKey] = useState<string>(\"review\");\r\n\r\n  const handlMenuOnClick = (e: any) => {\r\n    setMenuItemKey(e.key);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Menu\r\n        onClick={handlMenuOnClick}\r\n        selectedKeys={[menuItemKey]}\r\n        mode=\"horizontal\"\r\n        className=\"nav_under\"\r\n      >\r\n        <Menu.Item\r\n          key=\"review\"\r\n          icon={<StarOutlined style={bigFont} />}\r\n          style={bigFont}\r\n        >\r\n          리뷰/평점\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"board\"\r\n          icon={<CoffeeOutlined style={bigFont} />}\r\n          style={bigFont}\r\n        >\r\n          자유게시판\r\n        </Menu.Item>\r\n      </Menu>\r\n      {menuItemKey === \"review\" && <Review />}\r\n      {menuItemKey === \"board\" && <Board />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Community;\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { MailOutlined, AppstoreOutlined } from \"@ant-design/icons\";\r\n\r\nconst MyInfo = () => {\r\n  const [menuItemKey, setMenuItemKey] = useState<string>(\"movie\");\r\n\r\n  const handlMenuOnClick = (e: any) => {\r\n    setMenuItemKey(e.key);\r\n  };\r\n\r\n  return <React.Fragment>MyInfo</React.Fragment>;\r\n};\r\n\r\nexport default MyInfo;\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { MailOutlined, AppstoreOutlined } from \"@ant-design/icons\";\r\n\r\nconst Point = () => {\r\n  const [menuItemKey, setMenuItemKey] = useState<string>(\"movie\");\r\n\r\n  const handlMenuOnClick = (e: any) => {\r\n    setMenuItemKey(e.key);\r\n  };\r\n\r\n  return <React.Fragment>Point</React.Fragment>;\r\n};\r\n\r\nexport default Point;\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { MailOutlined, AppstoreOutlined } from \"@ant-design/icons\";\r\n\r\nconst EditInfo = () => {\r\n  const [menuItemKey, setMenuItemKey] = useState<string>(\"movie\");\r\n\r\n  const handlMenuOnClick = (e: any) => {\r\n    setMenuItemKey(e.key);\r\n  };\r\n\r\n  return <React.Fragment>EditInfo</React.Fragment>;\r\n};\r\n\r\nexport default EditInfo;\r\n","import React from \"react\";\r\nimport { Collapse, Descriptions, Row, Col, Typography } from \"antd\";\r\nimport { ITicket } from \"../../../common/interface\";\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst PastTicket = (props: { ticketData: ITicket; key: number }) => {\r\n  const { ticketData: ticket, key } = props;\r\n\r\n  const header = (\r\n    <Row style={{ width: \"100%\" }}>\r\n      <Col span={24}>\r\n        <Text> [예매번호: {ticket.reserveNo}]</Text>\r\n      </Col>\r\n      <Col span={24}>\r\n        <Text style={{ fontSize: \"18pt\", fontWeight: \"bold\" }}>\r\n          {ticket.title}\r\n        </Text>\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Collapse expandIconPosition=\"right\" style={{ marginTop: 3 }}>\r\n        <Panel header={header} key={key}>\r\n          <Col span={24}>\r\n            <Descriptions title=\"상세 정보\">\r\n              <Descriptions.Item label=\"지점\">{ticket.place}</Descriptions.Item>\r\n              <Descriptions.Item label=\"좌석\">\r\n                {ticket.room} {ticket.seatRow}\r\n                {ticket.seatCol}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"상영 시간\">\r\n                {ticket.time}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"결제 일시\">\r\n                {ticket.date} {ticket.time}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"가격\">{ticket.price}</Descriptions.Item>\r\n            </Descriptions>\r\n          </Col>\r\n        </Panel>\r\n      </Collapse>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PastTicket;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getTicketHistory } from \"../../../common/api\";\r\nimport { ITicket } from \"../../../common/interface\";\r\nimport PastTicket from \"./PastTicket\";\r\n\r\nconst ReserveHistory = () => {\r\n  const [tickets, setTickets] = useState<ITicket[]>([]);\r\n\r\n  useEffect(() => {\r\n    getTicketHistory().then((res) => {\r\n      setTickets(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ marginTop: 20 }}>\r\n        {tickets.map((item: ITicket, index: number) => (\r\n          <PastTicket ticketData={item} key={index} />\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ReserveHistory;\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport {\r\n  MailOutlined,\r\n  AppstoreOutlined,\r\n  HistoryOutlined,\r\n} from \"@ant-design/icons\";\r\nimport MyInfo from \"./info/MyInfo\";\r\nimport Point from \"./info/Point\";\r\nimport EditInfo from \"./info/EditInfo\";\r\nimport ReserveHistory from \"./history/ReserveHistory\";\r\n\r\nconst bigFont = {\r\n  fontSize: \"18pt\",\r\n};\r\n\r\nconst MyPage = () => {\r\n  const [menuItemKey, setMenuItemKey] = useState<string>(\"reserveHistory\");\r\n\r\n  const handlMenuOnClick = (e: any) => {\r\n    setMenuItemKey(e.key);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Menu\r\n        onClick={handlMenuOnClick}\r\n        selectedKeys={[menuItemKey]}\r\n        mode=\"horizontal\"\r\n        className=\"nav_under\"\r\n      >\r\n        {/* <SubMenu key=\"1\" icon={<SettingOutlined />} title=\"내 정보\">\r\n          <Menu.ItemGroup title=\"Item 1\">\r\n            <Menu.Item key=\"myInfo\">기본정보</Menu.Item>\r\n            <Menu.Item key=\"point\">포인트</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu> */}\r\n\r\n        {/* <Menu.Item key=\"myInfo\" icon={<AppstoreOutlined />}>\r\n          내 정보\r\n        </Menu.Item> */}\r\n        <Menu.Item\r\n          key=\"reserveHistory\"\r\n          icon={<HistoryOutlined style={bigFont} />}\r\n          style={bigFont}\r\n        >\r\n          예매이력\r\n        </Menu.Item>\r\n        {/* <Menu.Item key=\"editInfo\" icon={<MailOutlined />}>\r\n          정보수정\r\n        </Menu.Item> */}\r\n      </Menu>\r\n      {menuItemKey === \"myInfo\" && <MyInfo />}\r\n      {menuItemKey === \"point\" && <Point />}\r\n      {menuItemKey === \"reserveHistory\" && <ReserveHistory />}\r\n      {menuItemKey === \"editInfo\" && <EditInfo />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import axios from \"axios\";\r\nimport {\r\n  IBoard,\r\n  IComment,\r\n  IMovieList,\r\n  IMovieStartTimes,\r\n  ITicket,\r\n} from \"./interface\";\r\n\r\nexport const getMovieList = async () => {\r\n  let movies: IMovieList[] = [];\r\n  await axios\r\n    .get(process.env.PUBLIC_URL + \"/datas/movies.json\")\r\n    .then((response) => {\r\n      movies = response.data.data;\r\n    });\r\n\r\n  return movies;\r\n};\r\n\r\nexport const getTheaters = async () => {\r\n  let theaters: string[] = [];\r\n  await axios\r\n    .get(process.env.PUBLIC_URL + \"/datas/theaters.json\")\r\n    .then((response) => {\r\n      for (const theater of response.data.data) {\r\n        theaters.push(theater.place);\r\n      }\r\n    });\r\n\r\n  return theaters;\r\n};\r\n\r\nexport const getTimes = async () => {\r\n  let theaters: IMovieStartTimes[];\r\n  await axios\r\n    .get(process.env.PUBLIC_URL + \"/datas/startTimes.json\")\r\n    .then((response) => {\r\n      theaters = response.data.data;\r\n    });\r\n\r\n  return theaters;\r\n};\r\n\r\nexport const getBoardData = async () => {\r\n  let boardData: IBoard[] = [];\r\n  await axios\r\n    .get(process.env.PUBLIC_URL + \"/datas/board.json\")\r\n    .then((response) => {\r\n      for (const item of response.data.data) {\r\n        boardData.push(item);\r\n      }\r\n    });\r\n\r\n  return boardData;\r\n};\r\n\r\nexport const getComments = async () => {\r\n  let comments: IComment[] = [];\r\n  await axios\r\n    .get(process.env.PUBLIC_URL + \"/datas/comments.json\")\r\n    .then((response) => {\r\n      const res = response.data.data;\r\n      res.forEach(\r\n        (element: {\r\n          writer: any;\r\n          movieKey: any;\r\n          content: any;\r\n          rate: any;\r\n          like: any;\r\n          dislike: any;\r\n        }) => {\r\n          const data: IComment = {\r\n            writer: element.writer,\r\n            movieKey: element.movieKey,\r\n            content: element.content,\r\n            rate: element.rate,\r\n            like: element.like,\r\n            dislike: element.dislike,\r\n            profileIdx: Math.floor(Math.random() * 16),\r\n          };\r\n          comments.push(data);\r\n        }\r\n      );\r\n    });\r\n\r\n  return comments;\r\n};\r\n\r\nexport const getTicketHistory = async () => {\r\n  let tickets: ITicket[] = [];\r\n  await axios\r\n    .get(process.env.PUBLIC_URL + \"/datas/reserveHistory.json\")\r\n    .then((response) => {\r\n      tickets = response.data.data;\r\n    });\r\n\r\n  return tickets;\r\n};\r\n"],"sourceRoot":""}